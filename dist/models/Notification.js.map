{"version":3,"sources":["../models/Notification.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+DAW8B;AAE9B,oDAA4B;AAG5B,sDAA8B;AAC9B,8EAAsD;AAMtD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,4BAAmB;CAiC7C,CAAA;AAhCC;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,8BAAO,EAAC,IAAI,IAAI,EAAE,CAAC;IACnB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;8BAChB,IAAI;0CAAC;AAEX;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CACnB,eAAe,EACf,wBAAwB,EACxB,KAAK,EAAE,sBAAsB,EAC7B,OAAO,EAAE,QAAQ,EAAE,SAAS,EAC5B,aAAa,CACd,CAAC;;0CACW;AAEb;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,8BAAO,EAAC,SAAS,CAAC;IAClB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;;4CACtD;AAEf;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,eAAK,CAAC;IACvB,6BAAM;;6CACS;AAEhB;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,eAAK,EAAE,SAAS,CAAC;8BAC3B,eAAK;2CAAC;AAEb;IAAC,IAAA,oCAAa,EAAC,GAAG,EAAE,CAAC,gBAAM,EAAE,GAAG,EAAE,CAAC,4BAAkB,EAAE,gBAAgB,EAAE,UAAU,CAAC;;6CAClE;AA7Bd,YAAY;IAJjB,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,YAAY,CAiCjB;AAED,kBAAe,YAAY,CAAC","file":"Notification.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n  BelongsToMany,\n} from 'sequelize-typescript';\n\nimport Event from './Event';\nimport Stack from './Stack';\nimport News from './News';\nimport Report from './Report';\nimport ReportNotification from './ReportNotification';\n\n@Table({\n  modelName: 'notification',\n  freezeTableName: true,\n} as TableOptions)\nclass Notification extends Model<Notification> {\n  @AllowNull(false)\n  @Default(new Date())\n  @Column(DataType.DATE)\n  time: Date;\n\n  @AllowNull(false)\n  @Column(DataType.ENUM(\n    'EveryNewStack',\n    '30DaysSinceLatestStack',\n    'new', '7DaysSinceLatestNews',\n    'daily', 'weekly', 'monthly',\n    'EveryFriday',\n  ))\n  mode: string;\n\n  @AllowNull(false)\n  @Default('pending')\n  @Column(DataType.ENUM('pending', 'ongoing', 'complete', 'discarded'))\n  status: string;\n\n  @ForeignKey(() => Event)\n  @Column\n  eventId: number;\n\n  @BelongsTo(() => Event, 'eventId')\n  event: Event;\n\n  @BelongsToMany(() => Report, () => ReportNotification, 'notificationId', 'reportId')\n  reports: Report[];\n\n  stack?: Stack;\n  news?: News;\n}\n\nexport default Notification;\n"],"sourceRoot":"../../src"}