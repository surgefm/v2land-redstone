{"version":3,"sources":["../models/Contact.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+DAU8B;AAE9B,sDAA8B;AAC9B,kEAA0C;AAC1C,kDAA0B;AAM1B,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,4BAAc;CAsDnC,CAAA;AArDC;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;0CACH;AAEnB;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CACnB,OAAO,EACP,SAAS,EACT,OAAO,EACP,UAAU,EACV,WAAW,CACZ,CAAC;;qCACW;AAEb;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CACnB,SAAS,EACT,OAAO,EACP,WAAW,EACX,SAAS,EACT,OAAO,EACP,kBAAkB,EAClB,uBAAuB,CACxB,CAAC;;uCACa;AAEf;IAAC,IAAA,8BAAO,EAAC,QAAQ,CAAC;IACjB,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;;uCACxC;AAEf;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;8CACC;AAEvB;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,gBAAM,CAAC;IACxB,6BAAM;;sCACO;AAEd;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,gBAAM,EAAE,OAAO,CAAC;8BACxB,gBAAM;wCAAC;AAEhB;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,sBAAY,CAAC;IAC9B,6BAAM;;+CACgB;AAEvB;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,sBAAY,EAAE,gBAAgB,CAAC;8BAClC,sBAAY;6CAAC;AAE3B;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,cAAI,CAAC;IACtB,6BAAM;;uCACQ;AAEf;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,cAAI,EAAE,QAAQ,CAAC;8BAC1B,cAAI;qCAAC;AArDP,OAAO;IAJZ,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,SAAS;QACpB,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,OAAO,CAsDZ;AAED,kBAAe,OAAO,CAAC","file":"Contact.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport Client from './Client';\nimport Subscription from './Subscription';\nimport Auth from './Auth';\n\n@Table({\n  modelName: 'contact',\n  freezeTableName: true,\n} as TableOptions)\nclass Contact extends Model<Contact> {\n  @Column(DataType.TEXT)\n  profileId?: string;\n\n  @AllowNull(false)\n  @Column(DataType.ENUM(\n    'email',\n    'twitter',\n    'weibo',\n    'telegram',\n    'mobileApp',\n  ))\n  type: string;\n\n  @AllowNull(false)\n  @Column(DataType.ENUM(\n    'twitter',\n    'weibo',\n    'twitterAt',\n    'weiboAt',\n    'email',\n    'emailDailyReport',\n    'mobileAppNotification',\n  ))\n  method: string;\n\n  @Default('active')\n  @AllowNull(false)\n  @Column(DataType.ENUM('active', 'inactive', 'expired'))\n  status: string;\n\n  @Column(DataType.TEXT)\n  unsubscribeId?: string;\n\n  @ForeignKey(() => Client)\n  @Column\n  owner: number;\n\n  @BelongsTo(() => Client, 'owner')\n  ownedBy: Client;\n\n  @ForeignKey(() => Subscription)\n  @Column\n  subscriptionId: number;\n\n  @BelongsTo(() => Subscription, 'subscriptionId')\n  subscription: Subscription;\n\n  @ForeignKey(() => Auth)\n  @Column\n  authId: number;\n\n  @BelongsTo(() => Auth, 'authId')\n  auth: Auth;\n}\n\nexport default Contact;\n"],"sourceRoot":"../../src"}