{"version":3,"sources":["../models/Event.ts"],"names":[],"mappings":"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","file":"Event.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  Default,\n  Is,\n  HasOne,\n  HasMany,\n  ForeignKey,\n  BelongsTo,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport _ from 'lodash';\n\nimport HeaderImage from './HeaderImage';\nimport Stack from './Stack';\nimport News from './News';\nimport Critique from './Critique';\nimport Notification from './Notification';\nimport Subscription from './Subscription';\nimport EventStackNews from './EventStackNews';\nimport EventTag from './EventTag';\nimport Tag from './Tag';\nimport Record from './Record';\nimport Client from './Client';\nimport EventContributor from './EventContributor';\nimport Star from './Star';\n\n@Table({\n  modelName: 'event',\n  freezeTableName: true,\n} as TableOptions)\nclass Event extends Model<Event> {\n  @AllowNull(false)\n  @Is('EventName', (value) => {\n    if (!_.isString(value) || value.length === 0) {\n      throw new Error('时间线名不得为空');\n    } else if (value.trim() !== value) {\n      throw new Error('时间线名两端不应含有空格');\n    }\n\n    let allDigit = true;\n    for (const char of value) {\n      if (!/\\d/.test(char)) {\n        allDigit = false;\n        break;\n      }\n    }\n    if (allDigit) {\n      throw new Error('时间线名不得全为数字');\n    }\n\n    const reserved = [\n      'register', 'new', 'setting', 'admin', 'dashboard', 'trending',\n      'about', 'subscription', 'index', 'login', 'verify', 'list',\n      'pending', 'post', 'topic', 'event', 'home', 'logout', 'signup',\n    ];\n\n    if (reserved.includes(value)) {\n      throw new Error(`时间线名不得为以下文字：${reserved.join(', ')}`);\n    }\n  })\n  @Column(DataType.TEXT)\n  name: string;\n\n  @AllowNull(true)\n  @Column(DataType.TEXT)\n  pinyin?: string;\n\n  @AllowNull(true)\n  @Column(DataType.TEXT)\n  description?: string;\n\n  @AllowNull(false)\n  @Default('pending')\n  @Column(DataType.ENUM('pending', 'admitted', 'rejected', 'hidden', 'removed'))\n  status: string;\n\n  @Default(false)\n  @Column(DataType.BOOLEAN)\n  needContributor: boolean;\n\n  @HasOne(() => HeaderImage, 'eventId')\n  headerImage: HeaderImage;\n\n  @HasMany(() => Stack, 'eventId')\n  stacks: Stack[];\n\n  @HasMany(() => Critique, 'eventId')\n  critiques: Critique[];\n\n  @HasMany(() => Notification, 'eventId')\n  notifications: Notification[];\n\n  @HasMany(() => Subscription, 'eventId')\n  subscriptions: Subscription[];\n\n  @HasMany(() => Star, 'eventId')\n  stars: Star[];\n\n  @ForeignKey(() => News)\n  @Column\n  latestAdmittedNewsId: number;\n\n  @BelongsTo(() => News, 'latestAdmittedNewsId')\n  latestAdmittedNews: News;\n\n  @ForeignKey(() => Client)\n  @Column\n  ownerId: number;\n\n  @BelongsTo(() => Client, 'ownerId')\n  owner: Client;\n\n  @ForeignKey(() => Event)\n  @Column\n  parentId: number;\n\n  @BelongsTo(() => Event, 'parentId')\n  parent: Event;\n\n  @BelongsToMany(() => Tag, () => EventTag)\n  tags: (Tag & {EventTag: EventTag})[] | Tag[];\n\n  @BelongsToMany(() => News, () => EventStackNews)\n  news: (News & {EventStackNews: EventStackNews})[];\n\n  @BelongsToMany(() => News, () => EventStackNews)\n  offshelfNews: (News & {EventStackNews: EventStackNews})[];\n\n  stackCount?: number;\n  newsCount?: number;\n  starCount?: number;\n  commitTime?: Date;\n  contribution?: Record[];\n  roles?: {\n    owners: number[];\n    managers: number[];\n    editors: number[];\n    viewers: number[];\n  };\n  contributors?: EventContributor[];\n  contributorIdList?: number[];\n  time?: Date;\n}\n\nexport default Event;\n"],"sourceRoot":"../../src"}