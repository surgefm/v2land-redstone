{"version":3,"sources":["../models/Record.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+DAS8B;AAE9B,sDAA8B;AAM9B,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,4BAAa;CA+FjC,CAAA;AAlFC;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;qCACR;AAEd;IAAC,gCAAS;IACT,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;sCACT;AAEhB;IAAC,gCAAS;IACT,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;0CACF;AAOpB;IAAC,gCAAS;IACT,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;yCACN;AAEnB;IAAC,gCAAS;IACT,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;6CACC;AAEvB;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CACnB,QAAQ,EACR,QAAQ,EACR,SAAS,CACV,CAAC;;yCACiB;AAqCnB;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;sCACN;AAEhB;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,KAAK,CAAC;;sCACV;AAEb;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,KAAK,CAAC;;oCACZ;AAEX;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,gBAAM,CAAC;IACxB,6BAAM;;qCACO;AAEd;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,gBAAM,EAAE,OAAO,CAAC;8BACxB,gBAAM;uCAAC;AA9FZ,MAAM;IAJX,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,QAAQ;QACnB,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,MAAM,CA+FX;AAED,kBAAe,MAAM,CAAC","file":"Record.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport Client from './Client';\n\n@Table({\n  modelName: 'record',\n  freezeTableName: true,\n} as TableOptions)\nclass Record extends Model<Record> {\n  /**\n    'Event',\n    'Stack',\n    'News',\n    'Client',\n    'HeaderImage',\n    'Subscription',\n    'Contact',\n    'Auth',\n    'Report',\n    'Miscellaneous'\n  */\n  @AllowNull(false)\n  @Column(DataType.TEXT)\n  model: string;\n\n  @AllowNull\n  @Column(DataType.INTEGER)\n  target?: number;\n\n  @AllowNull\n  @Column(DataType.TEXT)\n  targetUUID?: number;\n\n  /**\n   * In the case of a through model, there are two target resources.\n   * The model with higher priority would be `target`, the other `subtarget`.\n   * Priority: Event > Stack > News\n   */\n  @AllowNull\n  @Column(DataType.INTEGER)\n  subtarget?: number;\n\n  @AllowNull\n  @Column(DataType.TEXT)\n  subtargetUUID?: number;\n\n  @Column(DataType.ENUM(\n    'create',\n    'update',\n    'destroy',\n  ))\n  operation?: string;\n\n  /**\n    'createEvent',\n    'updateEventStatus',\n    'updateEventDetail',\n    'createEventHeaderImage',\n    'updateEventHeaderImage',\n    'createStack',\n    'updateStackStatus',\n    'updateStackDetail',\n    'invalidateStack',\n    'notifyNewStack',\n    'createNews',\n    'updateNewsStatus',\n    'updateNewsDetail',\n    'notifyNewNews',\n    'createSubscription',\n    'updateSubscription',\n    'cancelSubscription',\n    'addContactToSubscription',\n    'removeSubscriptionContact',\n    'createClient',\n    'updateClientRole',\n    'updateClientDetail',\n    'updateClientPassword',\n    'createClientVerificationToken',\n    'authorizeThirdPartyAccount',\n    'unauthorizeThirdPartyAccount',\n    'notify',\n    'sendEmailDailyReport',\n    'sendWeeklyDailyReport',\n    'sendMonthlyDailyReport'\n    'createTag',\n    'addTagToEvent',\n    'removeTagFromEvent'\n  */\n  @Column(DataType.TEXT)\n  action?: string;\n\n  @Column(DataType.JSONB)\n  before?: any;\n\n  @Column(DataType.JSONB)\n  data?: any;\n\n  @ForeignKey(() => Client)\n  @Column\n  owner: number;\n\n  @BelongsTo(() => Client, 'owner')\n  ownedBy: Client;\n}\n\nexport default Record;\n"],"sourceRoot":"../../src"}