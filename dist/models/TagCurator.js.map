{"version":3,"sources":["../models/TagCurator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+DAO8B;AAC9B,gDAAwB;AACxB,sDAA8B;AAM9B,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,4BAAiB;CAQzC,CAAA;AAPC;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,aAAG,CAAC;IACrB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;yCACX;AAEd;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,gBAAM,CAAC;IACxB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;6CACP;AAPd,UAAU;IAJf,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,UAAU,CAQf;AAED,kBAAe,UAAU,CAAC","file":"TagCurator.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  TableOptions,\n  ForeignKey,\n  DataType,\n} from 'sequelize-typescript';\nimport Tag from './Tag';\nimport Client from './Client';\n\n@Table({\n  modelName: 'tagCurator',\n  freezeTableName: true,\n} as TableOptions)\nclass TagCurator extends Model<TagCurator> {\n  @ForeignKey(() => Tag)\n  @Column(DataType.INTEGER)\n  tagId: number;\n\n  @ForeignKey(() => Client)\n  @Column(DataType.INTEGER)\n  curatorId: number;\n}\n\nexport default TagCurator;\n"],"sourceRoot":"../../src"}