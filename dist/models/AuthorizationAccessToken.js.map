{"version":3,"sources":["../models/AuthorizationAccessToken.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+DAU8B;AAE9B,sDAA8B;AAC9B,gFAAwD;AAMxD,IAAM,wBAAwB,GAA9B,MAAM,wBAAyB,SAAQ,4BAA+B;CA8BrE,CAAA;AA7BC;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;uDACR;AAEd;IAAC,IAAA,gCAAS,EAAC,IAAI,CAAC;IACf,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;8DACA;AAEtB;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;8BACd,IAAI;wDAAC;AAEb;IAAC,IAAA,8BAAO,EAAC,QAAQ,CAAC;IACjB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;wDAC5B;AAEf;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,gBAAM,CAAC;IACxB,6BAAM;;uDACO;AAEd;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,gBAAM,EAAE,OAAO,CAAC;8BACxB,gBAAM;yDAAC;AAEhB;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,6BAAmB,CAAC;IACrC,6BAAM;;uEACuB;AAE9B;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,6BAAmB,EAAE,uBAAuB,CAAC;8BACzC,6BAAmB;qEAAC;AA7BrC,wBAAwB;IAJ7B,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,wBAAwB,CA8B7B;AAED,kBAAe,wBAAwB,CAAC","file":"AuthorizationAccessToken.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport Client from './Client';\nimport AuthorizationClient from './AuthorizationClient';\n\n@Table({\n  modelName: 'authorizationAccessToken',\n  freezeTableName: true,\n} as TableOptions)\nclass AuthorizationAccessToken extends Model<AuthorizationAccessToken> {\n  @AllowNull(false)\n  @Column(DataType.TEXT)\n  token: string;\n\n  @AllowNull(true)\n  @Column(DataType.TEXT)\n  refreshToken?: string;\n\n  @AllowNull(false)\n  @Column(DataType.DATE)\n  expire: Date;\n\n  @Default('active')\n  @Column(DataType.ENUM('active', 'revoked'))\n  status: string;\n\n  @ForeignKey(() => Client)\n  @Column\n  owner: number;\n\n  @BelongsTo(() => Client, 'owner')\n  ownedBy: Client;\n\n  @ForeignKey(() => AuthorizationClient)\n  @Column\n  authorizationClientId: number;\n\n  @BelongsTo(() => AuthorizationClient, 'authorizationClientId')\n  authorizationClient: AuthorizationClient;\n}\n\nexport default AuthorizationAccessToken;\n"],"sourceRoot":"../../src"}