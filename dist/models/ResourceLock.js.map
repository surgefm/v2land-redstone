{"version":3,"sources":["../models/ResourceLock.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+DAS8B;AAE9B,sDAA8B;AAC9B,oDAA4B;AAE5B,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,uCAAiB,CAAA;IACjB,2CAAqB,CAAA;IACrB,yCAAmB,CAAA;AACrB,CAAC,EAJW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAI7B;AAMD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,4BAAmB;CA6B7C,CAAA;AA5BC;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;;2CACR;AAEd;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;gDACN;AAEnB;IAAC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC;8BACb,IAAI;6CAAC;AAEd;IAAC,IAAA,gCAAS,EAAC,KAAK,CAAC;IAChB,IAAA,8BAAO,EAAC,kBAAkB,CAAC,MAAM,CAAC;IAClC,IAAA,6BAAM,EAAC,+BAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;;4CACxC;AAEf;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,gBAAM,CAAC;IACxB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;4CACV;AAEf;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,gBAAM,EAAE,QAAQ,CAAC;8BACxB,gBAAM;8CAAC;AAEjB;IAAC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,eAAK,CAAC;IACvB,IAAA,6BAAM,EAAC,+BAAQ,CAAC,OAAO,CAAC;;6CACT;AAEhB;IAAC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,eAAK,EAAE,SAAS,CAAC;8BAC3B,eAAK;2CAAC;AA5BT,YAAY;IAJjB,IAAA,4BAAK,EAAC;QACL,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE,IAAI;KACN,CAAC;GACZ,YAAY,CA6BjB;AAED,kBAAe,YAAY,CAAC","file":"ResourceLock.js","sourcesContent":["import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  TableOptions,\n  AllowNull,\n  ForeignKey,\n  BelongsTo, Default,\n} from 'sequelize-typescript';\n\nimport Client from './Client';\nimport Event from './Event';\n\nexport enum ResourceLockStatus {\n  ACTIVE = 'active',\n  UNLOCKED = 'unlocked',\n  EXPIRED = 'expired',\n}\n\n@Table({\n  modelName: 'resourceLock',\n  freezeTableName: true,\n} as TableOptions)\nclass ResourceLock extends Model<ResourceLock> {\n  @AllowNull(false)\n  @Column(DataType.TEXT)\n  model: string; // event, stack, news\n\n  @Column(DataType.INTEGER)\n  resourceId: number;\n\n  @Column(DataType.DATE)\n  expires: Date;\n\n  @AllowNull(false)\n  @Default(ResourceLockStatus.ACTIVE)\n  @Column(DataType.ENUM('active', 'unlocked', 'expired'))\n  status: string;\n\n  @ForeignKey(() => Client)\n  @Column(DataType.INTEGER)\n  locker: number;\n\n  @BelongsTo(() => Client, 'locker')\n  lockedBy: Client;\n\n  @ForeignKey(() => Event)\n  @Column(DataType.INTEGER)\n  eventId: number;\n\n  @BelongsTo(() => Event, 'eventId')\n  event: Event;\n}\n\nexport default ResourceLock;\n"],"sourceRoot":"../../src"}