{"version":3,"sources":["../loadRoutes.ts"],"names":[],"mappings":"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","file":"loadRoutes.js","sourcesContent":["import controllers from '@Controllers';\nimport { routes, policies } from '@Configs';\nimport policyMiddlewares, { PolicyMiddleware, forbiddenRoute } from '@Policies';\nimport { RedstoneRequest, RedstoneResponse, NextFunction } from '@Types';\nimport { Express } from 'express';\n\ntype PolicyRule = string | PolicyMiddleware;\n\nasync function loadRoutes(app: Express) {\n  for (const key in routes) {\n    if (typeof routes[key] === 'string') {\n      const fn = routes[key] as string;\n      const method = getMethod(app, key);\n      const route = key.split(' ')[key.split(' ').length - 1];\n      const controller = fn.split('.')[0];\n      const action = fn.split('.')[1];\n      const middlewares = getPolicies(controller, action);\n      method(route, ...middlewares, getControllerAction(controller, action));\n    }\n  }\n}\n\nfunction getControllerAction(controller: string, action: string) {\n  return function(req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) {\n    controllers[controller][action](req, res).catch(next);\n  };\n}\n\nfunction getMethod(app: Express, location: string) {\n  switch (location.split(' ')[0].toUpperCase()) {\n  case 'GET':\n    return app.get.bind(app);\n  case 'POST':\n    return app.post.bind(app);\n  case 'HEAD':\n    return app.head.bind(app);\n  case 'PUT':\n    return app.put.bind(app);\n  case 'DELETE':\n    return app.delete.bind(app);\n  default:\n    return app.all.bind(app);\n  }\n}\n\nfunction getPolicies(controller: string, action: string) {\n  if (!(controller in controllers)) wrongConfig(controller, action);\n  if (!(controller in policies)) wrongConfig(controller, action);\n  if (!(action in policies[controller]) && !('*' in policies[controller])) wrongConfig(controller, action);\n  const policyRule = policies[controller][action in policies[controller] ? action : '*'];\n  if (typeof policyRule === 'boolean') {\n    return policyRule ? [] : [forbiddenRoute];\n  }\n\n  const list = (typeof policyRule === 'string' || typeof policyRule === 'function')\n    ? [policyRule as unknown as PolicyRule]\n    : policyRule as unknown as PolicyRule[];\n\n  const middlewares: PolicyMiddleware[] = [];\n  for (const policy of list) {\n    if (typeof policy === 'function') {\n      middlewares.push(policy);\n    } else {\n      if (!(policy in policyMiddlewares)) {\n        wrongConfig(controller, action);\n        return [forbiddenRoute];\n      }\n      middlewares.push(policyMiddlewares[policy]);\n    }\n  }\n  return middlewares;\n}\n\nfunction wrongConfig(controller: string, action: string) {\n  throw new Error(`Wrong route config: ${controller} or ${action} not found`);\n}\n\nexport default loadRoutes;\n"],"sourceRoot":"../src"}