{"version":3,"sources":["../api/hooks/dbInit/index.js"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAO,GAAG,SAAS,MAAM,CAAC,KAAK;IACpC,OAAO;QACL,UAAU,EAAE,UAAe,EAAE;;gBAC3B,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBAC7C,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC;gBAC5B,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC;oBACjC,KAAK,EAAE;wBACL,oBAAoB,EAAE,IAAI;qBAC3B;iBACF,CAAC,CAAC;gBAEH,MAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;gBAEH,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC5B,EAAE,EAAE,CAAC;YACP,CAAC;SAAA;KACF,CAAC;AACJ,CAAC,CAAC","file":"index.js","sourcesContent":["module.exports = function DBInit(sails) {\n  return {\n    initialize: async function(cb) {\n      const SeqModels = require('../../../models');\n      const { Event } = SeqModels;\n      const events = await Event.findAll({\n        where: {\n          latestAdmittedNewsId: null,\n        },\n      });\n\n      const promises = [];\n      events.forEach(event => {\n        promises.push(EventService.updateAdmittedLatestNews(event.id, {}));\n      });\n\n      await Promise.all(promises);\n      cb();\n    },\n  };\n};\n"],"sourceRoot":"../../../../src"}