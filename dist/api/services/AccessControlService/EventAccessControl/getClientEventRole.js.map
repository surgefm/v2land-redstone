{"version":3,"sources":["../api/services/AccessControlService/EventAccessControl/getClientEventRole.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0EAAoE;AACpE,mDAAyD;AACzD,sFAA8D;AAC9D,kFAA0D;AAC1D,kFAA0D;AAE1D,SAA8B,kBAAkB,CAAC,QAAgB,EAAE,OAAe;;QAChF,IAAI,MAAM,IAAA,oBAAO,EAAC,QAAQ,EAAE,IAAA,sCAAsB,EAAC,OAAO,CAAC,CAAC;YAAE,OAAO,OAAO,CAAC;QAC7E,IAAI,MAAM,IAAA,gCAAsB,EAAC,QAAQ,EAAE,OAAO,CAAC;YAAE,OAAO,SAAS,CAAC;QACtE,IAAI,MAAM,IAAA,8BAAoB,EAAC,QAAQ,EAAE,OAAO,CAAC;YAAE,OAAO,QAAQ,CAAC;QACnE,IAAI,MAAM,IAAA,8BAAoB,EAAC,QAAQ,EAAE,OAAO,CAAC;YAAE,OAAO,QAAQ,CAAC;QACnE,OAAO,UAAU,CAAC;IACpB,CAAC;CAAA;AAND,qCAMC","file":"getClientEventRole.js","sourcesContent":["import { hasRole } from '@Services/AccessControlService/operations';\nimport { getEventOwnerRolePlain } from './getEventRoles';\nimport isAllowedToManageEvent from './isAllowedToManageEvent';\nimport isAllowedToEditEvent from './isAllowedToEditEvent';\nimport isAllowedToViewEvent from './isAllowedToViewEvent';\n\nexport default async function getClientEventRole(clientId: number, eventId: number) {\n  if (await hasRole(clientId, getEventOwnerRolePlain(eventId))) return 'owner';\n  if (await isAllowedToManageEvent(clientId, eventId)) return 'manager';\n  if (await isAllowedToEditEvent(clientId, eventId)) return 'editor';\n  if (await isAllowedToViewEvent(clientId, eventId)) return 'viewer';\n  return 'passerby';\n}\n"],"sourceRoot":"../../../../../src"}