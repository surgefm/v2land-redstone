{"version":3,"sources":["../api/services/AccessControlService/EventAccessControl/getEventRoles.ts"],"names":[],"mappings":"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","file":"getEventRoles.js","sourcesContent":["import { allow, areAnyRolesAllowed, addRoleParents } from '@Services/AccessControlService/operations';\n\nexport const getEventResourceId = (eventId: number) => `event-${eventId}`;\n\nexport const getEventViewRolePlain = (eventId: number) => `${getEventResourceId(eventId)}-view-role`;\nexport const getEventEditRolePlain = (eventId: number) => `${getEventResourceId(eventId)}-edit-role`;\nexport const getEventManageRolePlain = (eventId: number) => `${getEventResourceId(eventId)}-manage-role`;\nexport const getEventOwnerRolePlain = (eventId: number) => `${getEventResourceId(eventId)}-owner-role`;\n\nexport async function getEventViewRole(eventId: number, forceUpdate = false) {\n  const resource = getEventResourceId(eventId);\n  const role = getEventViewRolePlain(eventId);\n\n  const isAllowed = await areAnyRolesAllowed(role, resource, 'view');\n  if (!isAllowed || forceUpdate) {\n    await allow(role, resource, 'view');\n  }\n  return role;\n}\n\nexport async function getEventEditRole(eventId: number, forceUpdate = false) {\n  const resource = getEventResourceId(eventId);\n  const editRole = getEventEditRolePlain(eventId);\n\n  const permissions = ['edit', 'makeCommit'];\n  const isAllowed = await areAnyRolesAllowed(editRole, resource, permissions);\n  if (!isAllowed || forceUpdate) {\n    await allow(editRole, resource, permissions);\n    const viewRole = await getEventViewRole(eventId);\n    await addRoleParents(editRole, viewRole);\n  }\n  return editRole;\n}\n\nexport async function getEventManageRole(eventId: number, forceUpdate = false) {\n  const resource = getEventResourceId(eventId);\n  const manageRole = getEventManageRolePlain(eventId);\n\n  const permissions = ['addViewer', 'removeViewer', 'addEditor', 'removeEditor'];\n  const isAllowed = await areAnyRolesAllowed(manageRole, resource, permissions);\n  if (!isAllowed || forceUpdate) {\n    await allow(manageRole, resource, permissions);\n    const editRole = await getEventEditRole(eventId);\n    await addRoleParents(manageRole, editRole);\n  }\n  return manageRole;\n}\n\nexport async function getEventOwnerRole(eventId: number) {\n  const ownerRole = getEventOwnerRolePlain(eventId);\n  const manageRole = await getEventManageRole(eventId);\n  await addRoleParents(ownerRole, manageRole);\n  return ownerRole;\n}\n"],"sourceRoot":"../../../../../src"}