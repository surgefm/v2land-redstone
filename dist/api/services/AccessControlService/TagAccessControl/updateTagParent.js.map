{"version":3,"sources":["../api/services/AccessControlService/TagAccessControl/updateTagParent.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,0EAA8F;AAC9F,+CAAiD;AAE1C,MAAM,eAAe,GAAG,CAAO,GAAQ,EAAE,MAAY,EAAE,EAAE;IAC9D,MAAM,OAAO,GAAG,MAAM,IAAA,8BAAgB,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC/C,IAAI,GAAG,CAAC,QAAQ,EAAE;QAChB,MAAM,kBAAkB,GAAG,MAAM,IAAA,8BAAgB,EAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChE,MAAM,IAAA,8BAAiB,EAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;KACtD;IACD,IAAI,MAAM,EAAE;QACV,MAAM,aAAa,GAAG,MAAM,IAAA,8BAAgB,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACxD,MAAM,IAAA,2BAAc,EAAC,OAAO,EAAE,aAAa,CAAC,CAAC;KAC9C;AACH,CAAC,CAAA,CAAC;AAVW,QAAA,eAAe,mBAU1B;AAEF,kBAAe,uBAAe,CAAC","file":"updateTagParent.js","sourcesContent":["import { Tag } from '@Models';\nimport { addRoleParents, removeRoleParents } from '@Services/AccessControlService/operations';\nimport { getTagManageRole } from './getTagRoles';\n\nexport const updateTagParent = async (tag: Tag, parent?: Tag) => {\n  const tagRole = await getTagManageRole(tag.id);\n  if (tag.parentId) {\n    const existingParentRole = await getTagManageRole(tag.parentId);\n    await removeRoleParents(tagRole, existingParentRole);\n  }\n  if (parent) {\n    const newParentRole = await getTagManageRole(parent.id);\n    await addRoleParents(tagRole, newParentRole);\n  }\n};\n\nexport default updateTagParent;\n"],"sourceRoot":"../../../../../src"}