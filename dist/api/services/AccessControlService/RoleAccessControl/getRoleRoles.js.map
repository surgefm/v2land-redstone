{"version":3,"sources":["../api/services/AccessControlService/RoleAccessControl/getRoleRoles.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,0EAAsF;AAEtF,SAAS,iBAAiB,CAAC,QAAgB;IACzC,OAAO,QAAQ,QAAQ,EAAE,CAAC;AAC5B,CAAC;AAEM,MAAM,oBAAoB,GAAG,CAAC,QAAgB,EAAE,EAAE,CAAC,GAAG,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC;AAAxF,QAAA,oBAAoB,wBAAoE;AAErG,SAAsB,eAAe,CAAC,QAAgB,EAAE,WAAW,GAAG,KAAK;;QACzE,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,QAAQ,GAAG,IAAA,4BAAoB,EAAC,QAAQ,CAAC,CAAC;QAEhD,MAAM,WAAW,GAAG,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,SAAS,GAAG,MAAM,IAAA,+BAAkB,EAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC5E,IAAI,CAAC,SAAS,IAAI,WAAW,EAAE;YAC7B,MAAM,IAAA,kBAAK,EAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;SAC9C;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;CAAA;AAVD,0CAUC","file":"getRoleRoles.js","sourcesContent":["import { allow, areAnyRolesAllowed } from '@Services/AccessControlService/operations';\n\nfunction getRoleResourceId(clientId: number) {\n  return `role-${clientId}`;\n}\n\nexport const getRoleEditRolePlain = (clientId: number) => `${getRoleResourceId(clientId)}-edit-role`;\n\nexport async function getRoleEditRole(clientId: number, forceUpdate = false) {\n  const resource = getRoleResourceId(clientId);\n  const editRole = getRoleEditRolePlain(clientId);\n\n  const permissions = ['edit'];\n  const isAllowed = await areAnyRolesAllowed(editRole, resource, permissions);\n  if (!isAllowed || forceUpdate) {\n    await allow(editRole, resource, permissions);\n  }\n  return editRole;\n}\n"],"sourceRoot":"../../../../../src"}