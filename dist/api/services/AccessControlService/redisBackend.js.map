{"version":3,"sources":["../api/services/AccessControlService/redisBackend.js"],"names":[],"mappings":"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","file":"redisBackend.js","sourcesContent":["/* eslint-disable */\n'use strict';\n\nimport contract from 'acl/lib/contract';\nimport _ from 'lodash';\nimport AclSeq from 'acl-sequelize';\n\nimport { sequelize, Sequelize } from '@Models';\n\nfunction noop() {}\n\nfunction RedisBackend(redis, prefix) {\n  this.redis = redis;\n  this.prefix = prefix || 'acl';\n  this.pg = new AclSeq(sequelize, {\n    prefix: 'acl_',\n    defaultSchema: {\n      key: { type: Sequelize.STRING, primaryKey: true },\n      value: { type: Sequelize.TEXT },\n    },\n    schema: {\n      users: {\n        key: { type: Sequelize.INTEGER, primaryKey: true },\n        value: { type: Sequelize.TEXT },\n      },\n    },\n  });\n}\n\nRedisBackend.prototype = {\n  /**\n     Begins a transaction\n  */\n  begin: function() {\n    return [this.redis.multi(), this.pg.begin()];\n  },\n\n  /**\n     Ends a transaction (and executes it)\n  */\n  end: async function(transactions, cb) {\n    contract(arguments).params('array', 'function').end();\n    const [redisTransaction, pgTransaction] = transactions;\n    await new Promise(resolve => this.pg.end(pgTransaction, resolve));\n    await redisTransaction.exec();\n    cb();\n  },\n\n  /**\n    Cleans the whole storage.\n  */\n  clean: function(cb) {\n    contract(arguments).params('function').end();\n    const self = this;\n    self.pg.clean();\n    self.redis.keys(self.prefix+'*', function(err, keys) {\n      if (keys.length) {\n        self.redis.del(keys, function() {\n          cb();\n        });\n      } else {\n        cb();\n      }\n    });\n  },\n\n  /**\n     Gets the contents at the bucket's key.\n  */\n  get: async function(bucket, key, cb) {\n    contract(arguments)\n\t      .params('string', 'string|number', 'function')\n\t      .end();\n\n    const redisKey = this.bucketKey(bucket, key);\n\n    try {\n      let keys = await this.redis.smembers(redisKey);\n      if (keys.length === 0) {\n        keys = (await (new Promise(resolve => this.pg.get(bucket, key, resolve)))) || [];\n        if (keys.length > 0) {\n          await this.redis.sadd(redisKey, ...keys)\n        }\n      }\n      cb(null, keys);\n    } catch (err) {\n      cb(err);\n    }\n  },\n\n  /**\n    Gets an object mapping each passed bucket to the union of the specified keys inside that bucket.\n  */\n  unions: async function(buckets, keys, cb) {\n    contract(arguments)\n      .params('array', 'array', 'function')\n      .end();\n\n    const redisKeys = {};\n    const batch = this.redis.batch();\n    const self = this;\n\n    const refresh = [];\n    for (let i = 0; i < buckets.length; i++) {\n      for (let j = 0; j < keys.length; j++) {\n        refresh.add(new Promise(this.get(buckets[i], keys[j])));\n      }\n    }\n    await Promise.all(refresh);\n\n    buckets.forEach(function(bucket) {\n      redisKeys[bucket] = self.bucketKey(bucket, keys);\n      batch.sunion(redisKeys[bucket], noop);\n    });\n\n    batch.exec(function(err, replies) {\n      if (!Array.isArray(replies)) {\n        return {};\n      }\n\n      const result = {};\n      replies.forEach(function(reply, index) {\n        if (reply instanceof Error) {\n          throw reply;\n        }\n\n        result[buckets[index]] = reply;\n      });\n      cb(err, result);\n    });\n  },\n\n  /**\n\t\tReturns the union of the values in the given keys.\n\t*/\n  union: async function(bucket, keys, cb) {\n    contract(arguments)\n\t      .params('string', 'array', 'function')\n\t      .end();\n\n    await Promise.all(keys.map(key => new Promise(resolve => this.get(bucket, key, resolve))));\n    keys = this.bucketKey(bucket, keys);\n    this.redis.sunion(keys, cb);\n  },\n\n  /**\n\t\tAdds values to a given key inside a bucket.\n\t*/\n  add: async function(transactions, bucket, key, values) {\n    contract(arguments)\n\t      .params('array', 'string', 'string|number', 'string|array|number')\n      .end();\n\n    const [redisTransaction, pgTransaction] = transactions;\n    this.pg.add(pgTransaction, bucket, key, values);\n    key = this.bucketKey(bucket, key);\n\n    if (Array.isArray(values)) {\n      values.forEach(function(value) {\n        redisTransaction.sadd(key, value);\n      });\n    } else {\n      redisTransaction.sadd(key, values);\n    }\n  },\n\n  /**\n     Delete the given key(s) at the bucket\n  */\n  del: function(transactions, bucket, keys) {\n    contract(arguments)\n\t      .params('array', 'string', 'string|array')\n\t      .end();\n\n    const self = this;\n    const [redisTransaction, pgTransaction] = transactions;\n    this.pg.del(pgTransaction, bucket, keys);\n\n    keys = Array.isArray(keys) ? keys : [keys];\n\n    keys = keys.map(function(key) {\n      return self.bucketKey(bucket, key);\n    });\n\n    redisTransaction.del(keys);\n  },\n\n  /**\n\t\tRemoves values from a given key inside a bucket.\n\t*/\n  remove: function(transactions, bucket, key, values) {\n    contract(arguments)\n\t      .params('array', 'string', 'string|number', 'string|array|number')\n      .end();\n\n    const [redisTransaction, pgTransaction] = transactions;\n    this.pg.remove(pgTransaction, bucket, key, values);\n    key = this.bucketKey(bucket, key);\n\n    if (Array.isArray(values)) {\n      values.forEach(function(value) {\n        redisTransaction.srem(key, value);\n      });\n    } else {\n      redisTransaction.srem(key, values);\n    }\n  },\n\n  //\n  // Private methods\n  //\n  bucketKey: function(bucket, keys) {\n    const self = this;\n    if (Array.isArray(keys)) {\n      return keys.map(function(key) {\n        return self.prefix+'_'+bucket+'@'+key;\n      });\n    } else {\n      return self.prefix+'_'+bucket+'@'+keys;\n    }\n  },\n};\n\nexport default RedisBackend;\n"],"sourceRoot":"../../../../src"}