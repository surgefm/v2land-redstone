{"version":3,"sources":["../api/services/RecordService.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAiC;AAkBjC,MAAM,UAAU,GAAG,CAAC,IAAgB,EAAE,EAAE;IACtC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC;IAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC;IAC9C,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF;;GAEG;AACH,SAAsB,MAAM,CAAC,IAAgB,EAAE,OAAuB;;QACpE,OAAO,gBAAM,CAAC,MAAM,iCACf,UAAU,CAAC,IAAI,CAAC,KACnB,SAAS,EAAE,QAAQ,KAClB,OAAO,CAAC,CAAC;IACd,CAAC;CAAA;AALD,wBAKC;AAED,SAAsB,MAAM,CAAC,IAAgB,EAAE,OAAuB;;QACpE,OAAO,gBAAM,CAAC,MAAM,iCACf,UAAU,CAAC,IAAI,CAAC,KACnB,SAAS,EAAE,QAAQ,KAClB,OAAO,CAAC,CAAC;IACd,CAAC;CAAA;AALD,wBAKC;AAED,SAAsB,OAAO,CAAC,IAAgB,EAAE,OAAuB;;QACrE,OAAO,gBAAM,CAAC,MAAM,iCACf,UAAU,CAAC,IAAI,CAAC,KACnB,SAAS,EAAE,SAAS,KACnB,OAAO,CAAC,CAAC;IACd,CAAC;CAAA;AALD,0BAKC","file":"RecordService.js","sourcesContent":["import { Record } from '@Models';\nimport { CreateOptions } from 'sequelize/types';\n\ninterface RecordData {\n  model: string;\n  action: string;\n  target?: number;\n  targetUUID?: string;\n  subtarget?: number;\n  subtargetUUID?: string;\n  owner?: number;\n  client?: number;\n  data?: any;\n  before?: any;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nconst refineData = (data: RecordData) => {\n  let model = data.model;\n  model = model[0].toUpperCase() + model.slice(1);\n  data.model = (model === 'Headerimage') ? 'HeaderImage' : model;\n  data.createdAt = data.createdAt || new Date();\n  data.updatedAt = data.updatedAt || new Date();\n  if (data.client) {\n    data.owner = data.client;\n    delete data.client;\n  }\n  return data;\n};\n\n/**\n * model, action, target, owner, data, before\n */\nexport async function create(data: RecordData, options?: CreateOptions) {\n  return Record.create({\n    ...refineData(data),\n    operation: 'create',\n  }, options);\n}\n\nexport async function update(data: RecordData, options?: CreateOptions) {\n  return Record.create({\n    ...refineData(data),\n    operation: 'update',\n  }, options);\n}\n\nexport async function destroy(data: RecordData, options?: CreateOptions) {\n  return Record.create({\n    ...refineData(data),\n    operation: 'destroy',\n  }, options);\n}\n"],"sourceRoot":"../../../src"}