{"version":3,"sources":["../api/services/TelegramService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iDAAiD;AACjD,kDAA0B;AAC1B,uCAAmC;AAEpB,kBAAU,GAAK,OAAO,CAAC,GAAG,YAAC;AAE1C;;GAEG;AACH,SAAsB,WAAW,CAC/B,MAAc,EACd,IAAY,EACZ,SAAS,GAAG,UAAU,EACtB,qBAAqB,GAAG,KAAK,EAC7B,mBAAmB,GAAE,KAAK,EAC1B,gBAAyB,EACzB,WAAoB,EACpB,kBAAkB,GAAG,KAAK;;QAE1B,IAAI,CAAC,kBAAU,IAAI,kBAAkB,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;SACtF;QAED,IACE,kBAAkB,IAAI,CACpB,OAAO,MAAM,KAAK,WAAW;YAC7B,OAAO,IAAI,KAAK,WAAW,CAC5B,EACD;YACA,MAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAC;SAC3D;QAED,MAAM,IAAI,GAAG;YACX,OAAO,EAAE,MAAM;YACf,IAAI;YACJ,UAAU,EAAE,SAAS;YACrB,wBAAwB,EAAE,qBAAqB;YAC/C,oBAAoB,EAAE,mBAAmB;YACzC,mBAAmB,EAAE,gBAAgB;YACrC,YAAY,EAAE,WAAW;SAC1B,CAAC;QAEF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,IAAI,CAC/B,+BAAgC,kBAAW,cAAc,EACzD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACpB,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;aAChD,CACF,CAAC;YACF,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;SACtD;IACH,CAAC;CAAA;AA5CD,kCA4CC;AAED,SAAsB,QAAQ,CAAC,IAAY,EAAE,SAAkB,EAAE,qBAA+B;;QAC9F,MAAM,MAAM,GAAG,kBAAO,CAAC,oBAAoB,CAAC;QAC5C,IAAI,kBAAO,CAAC,WAAW,KAAK,YAAY,EAAE;YACxC,OAAO;SACR;QACD,OAAO,WAAW,CAChB,MAAM,EACN,IAAI,EACJ,SAAS,EACT,qBAAqB,CACtB,CAAC;IACJ,CAAC;CAAA;AAXD,4BAWC","file":"TelegramService.js","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport axios from 'axios';\nimport { globals } from '@Configs';\n\nexport const { TELE_TOKEN } = process.env;\n\n/**\n * reference: https://core.telegram.org/bots/api#sendmessage\n */\nexport async function sendMessage(\n  chatId: string,\n  text: string,\n  parseMode = 'Markdown',\n  disableWebPagePreview = false,\n  disableNotification= false,\n  replyToMessageId?: string,\n  replyMarkup?: string,\n  notifyMissingToken = false,\n) {\n  if (!TELE_TOKEN && notifyMissingToken) {\n    throw new Error('Environment Variable for TelegramService \\'TELE_TOKEN\\' undefined');\n  }\n\n  if (\n    notifyMissingToken && (\n      typeof chatId === 'undefined' ||\n      typeof text === 'undefined'\n    )\n  ) {\n    throw new TypeError(`params chatId of text is undefined`);\n  }\n\n  const data = {\n    chat_id: chatId,\n    text,\n    parse_mode: parseMode,\n    disable_web_page_preview: disableWebPagePreview,\n    disable_notification: disableNotification,\n    reply_to_message_id: replyToMessageId,\n    reply_markup: replyMarkup,\n  };\n\n  try {\n    const response = await axios.post(\n      `https://api.telegram.org/bot${ TELE_TOKEN }/sendMessage`,\n      JSON.stringify(data), {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n    return response;\n  } catch (err) {\n    console.error('Error sending telegram message', err);\n  }\n}\n\nexport async function sendText(text: string, parseMode?: string, disableWebPagePreview?: boolean) {\n  const chatId = globals.telegramReviewChatId;\n  if (globals.environment !== 'production') {\n    return;\n  }\n  return sendMessage(\n    chatId,\n    text,\n    parseMode,\n    disableWebPagePreview\n  );\n}\n"],"sourceRoot":"../../../src"}