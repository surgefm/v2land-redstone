{"version":3,"sources":["../api/services/UtilService/generateWhereQuery.ts"],"names":[],"mappings":"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","file":"generateWhereQuery.js","sourcesContent":["/**\n * 生成 WHERE 语句\n */\nimport { Op } from 'sequelize';\n\nconst { iLike } = Op;\n\nfunction generateWhereQuery(query: any, model = '', values: any[] = [], parents: any[] = []) {\n  let string = '';\n  const properties = [...Object.getOwnPropertyNames(query), ...Object.getOwnPropertySymbols(query)];\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    let temp = parents.slice();\n    if (\n      typeof query[property] === 'undefined' ||\n      [\n        '_properties',\n        'associations',\n        'associationsCache',\n        'inspect',\n        'add',\n        'remove',\n      ].includes(property as string)\n    ) {\n      continue;\n    } else if (\n      typeof query[property] !== 'object' ||\n      query[property] instanceof Date ||\n      query[property][iLike]\n    ) {\n      if (string.length) {\n        string += ' AND ';\n      }\n      if (temp.length > 0) {\n        string += `\"${temp[0]}\"::json#>>'{`;\n        temp = temp.slice(1);\n        temp.push(property);\n        string += `${temp.join(',')}}'`;\n      } else {\n        string += (model ? (model + '.') : '') + (property as string);\n      }\n\n      if (typeof query[property] !== 'object' || query[property] instanceof Date) {\n        values.push(query[property]);\n        string += ' = $' + values.length;\n      } else if (query[property][iLike]) {\n        values.push(query[property][iLike]);\n        string += ' ILIKE $' + values.length;\n      }\n    } else if (property === Op.or) {\n      if (string.length) {\n        string += ' AND ';\n      }\n      string += '(';\n      const options = query[Op.or];\n      for (let j = 0; j < options.length; j++) {\n        string += '('\n        const child = generateWhereQuery(query[Op.or][j], model, values, parents);\n        string += child.query;\n        string += ')';\n        values = child.values;\n        if (j !== options.length - 1) string += ' OR ';\n      }\n      string += ')'\n    } else {\n      const child = generateWhereQuery(query[property], model, values, [...parents, property]);\n      if (string.length) {\n        string += ' AND ';\n      }\n      string += child.query;\n      values = child.values;\n    }\n  }\n\n  return {\n    query: string,\n    values,\n  };\n}\n\nexport default generateWhereQuery;\n"],"sourceRoot":"../../../../src"}