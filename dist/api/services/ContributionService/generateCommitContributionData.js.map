{"version":3,"sources":["../api/services/ContributionService/generateCommitContributionData.ts"],"names":[],"mappings":"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","file":"generateCommitContributionData.js","sourcesContent":["import { Op, Transaction } from 'sequelize';\nimport _ from 'lodash';\nimport { EventContributor, Commit, Record, Stack } from '@Models';\nimport * as UtilService from '../UtilService';\n\nasync function generateCommitContributionData(commit: Commit, { transaction }: { transaction?: Transaction } = {}) {\n  let { parent } = commit;\n  if (!parent && commit.parentId) {\n    parent = await Commit.findByPk(commit.parentId);\n  }\n\n  const timeConstraint = {\n    createdAt: {\n      [Op.lte]: commit.time,\n      ...(parent ? { [Op.gt]: parent.time } : null),\n    },\n  };\n\n  await UtilService.execWithTransaction(async transaction => {\n    const eventContributionRecords = await Record.findAll({\n      where: {\n        ...timeConstraint,\n        [Op.or]: [\n          {\n            target: commit.eventId,\n            action: {\n              [Op.or]: ['createEvent', 'addNewsToEvent', 'updateStackOrders'],\n            },\n          },\n          {\n            subtarget: commit.eventId,\n            action: 'forkEvent',\n          },\n        ],\n      },\n      transaction,\n    });\n\n    const stacks = await Stack.findAll({\n      where: {\n        eventId: commit.eventId,\n        status: 'admitted',\n        order: { [Op.gte]: 0 },\n      },\n      transaction,\n    });\n\n    const stackContributionRecords = await Record.findAll({\n      where: {\n        ...timeConstraint,\n        target: { [Op.or]: stacks.length > 0 ? stacks.map(s => s.id) : [-1] },\n        action: {\n          [Op.or]: ['createStack', 'addNewsToStack'],\n        },\n      },\n      transaction,\n    });\n\n    const roleChangeRecords = await Record.findAll({\n      where: {\n        ...timeConstraint,\n        model: 'Client',\n        action: {\n          [Op.or]: [\n            'setClientEventOwner',\n            'allowClientToViewEvent',\n            'allowClientToEditEvent',\n            'allowClientToManageEvent',\n            'disallowClientToViewEvent',\n            'disallowClientToEditEvent',\n            'disallowClientToManageEvent',\n          ],\n        },\n      },\n      transaction,\n    });\n    const roleChanges = _.uniqBy(roleChangeRecords, r => r.target);\n\n    const records = [...eventContributionRecords, ...stackContributionRecords, ...roleChanges];\n    records.sort((a, b) => {\n      if (a.action === b.action) {\n        return a.createdAt > b.createdAt ? 1 : -1;\n      }\n      return a.action > b.action ? 1 : -1;\n    });\n    const clientIds = _.uniq(records.map(r => r.owner).filter(i => i));\n    const clients: { [index: number]: Partial<EventContributor> } = {};\n    for (const clientId of clientIds) {\n      const data = {\n        eventId: commit.eventId,\n        commitId: commit.id,\n        contributorId: clientId,\n        points: 0,\n        parentId: undefined as number,\n      };\n      if (commit.parentId) {\n        let { parentId } = commit;\n        while (parentId) {\n          const previousCount = await EventContributor.findOne({\n            where: {\n              eventId: commit.eventId,\n              contributorId: clientId,\n              commitId: parentId,\n            },\n            transaction,\n          });\n          if (previousCount) {\n            data.parentId = previousCount.id;\n            data.points = previousCount.points;\n            break;\n          }\n          const parentCommit = await Commit.findByPk(parentId, { transaction });\n          parentId = parentCommit.parentId;\n        }\n      }\n      clients[clientId] = data;\n    }\n\n    for (let i = 0; i < records.length; i++) {\n      const record = records[i];\n      if (!record.owner) continue;\n      const nextRecord = records[i + 1];\n      if (nextRecord && record.action === 'updateStackOrders' && nextRecord.action === 'updateStackOrders' && record.owner === nextRecord.owner) {\n        continue;\n      }\n      switch (record.action) {\n      case 'createEvent':\n      case 'forkEvent':\n        clients[record.owner].points += 5;\n        break;\n      case 'addNewsToEvent':\n        clients[record.owner].points += 2;\n        clients[record.owner].points += 2;\n        break;\n      case 'addNewsToStack':\n      case 'updateStackOrders':\n      case 'inviteClientToNewsroom':\n        clients[record.owner].points += 1;\n        break;\n      }\n    }\n\n    for (const roleChange of roleChanges) {\n      clients[roleChange.owner].points += 1;\n    }\n\n    for (const clientId of clientIds) {\n      const eventContributor = await EventContributor.findOne({\n        where: {\n          eventId: commit.eventId,\n          commitId: commit.id,\n          contributorId: clientId,\n        },\n        transaction,\n      });\n      if (eventContributor) {\n        eventContributor.points = clients[clientId].points;\n        await eventContributor.save({ transaction });\n      } else {\n        await EventContributor.create(clients[clientId], { transaction });\n      }\n    }\n  }, transaction);\n}\n\nexport default generateCommitContributionData;\n"],"sourceRoot":"../../../../src"}