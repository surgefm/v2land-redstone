{"version":3,"sources":["../api/services/RedisService.ts"],"names":[],"mappings":"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","file":"RedisService.js","sourcesContent":["import Redis from 'ioredis';\nimport { datastores } from '@Configs';\n\nconst config = datastores.redis;\nexport const redisUrl = `rediss://${config.username}:${config.password}@${config.host}:${config.port}`;\nexport const redisConfig = redisUrl;\nexport const classicRedis = process.env.REDIS_HOST ? new Redis(redisUrl) : null;\nexport const redis = classicRedis;\n\n\nexport function getClientIdKey(clientName: string) {\n  return `client-name-mem-${(clientName || '').toLowerCase()}`;\n}\n\nexport function getEventIdKey(eventName: string, clientName: string | number) {\n  return `event-name-mem-${eventName}@${(clientName + '').toLowerCase()}`;\n}\n\nexport function getSubscriptionCacheKey(eventId: number) {\n  return `event-subscription-mem-${eventId}`;\n}\n\nexport async function get(key: string) {\n  if (!redis) return;\n  const data = await redis.get(datastores.redis.prefix + key);\n  if (!data) return;\n  return JSON.parse(data);\n}\n\nexport async function set(key: string, value: any) {\n  if (!redis) return;\n  return redis.set(datastores.redis.prefix + key, JSON.stringify(value));\n}\n\nexport async function del(key: string) {\n  if (!redis) return;\n  return redis.del(datastores.redis.prefix + key);\n}\n\nexport async function expire(key: string, seconds: number) {\n  if (!redis) return;\n  return redis.expire(datastores.redis.prefix + key, seconds);\n}\n\nexport async function mget(...keys: string[]) {\n  if (!redis) return;\n  if (keys.length === 0) return [];\n  keys = keys.map(key => (datastores.redis.prefix + key));\n  const data = await redis.mget(keys);\n  return data.map(d => d ? JSON.parse(d) : null);\n}\n\nexport async function hget(key: string, field: string) {\n  if (!redis) return;\n  const data = await redis.hget(datastores.redis.prefix + key, field);\n  if (!data) return;\n  return JSON.parse(data);\n}\n\nexport async function hgetall(key: string) {\n  if (!redis) return;\n  const data = await redis.hgetall(datastores.redis.prefix + key);\n  if (!data) return;\n  const ret: { [index: string]: any } = {};\n  const keys = Object.keys(data);\n  for (const key of keys) {\n    ret[key] = JSON.parse(data[key]);\n  }\n  return ret;\n}\n\nexport async function hset(key: string, field: string, value: any) {\n  if (!redis) return;\n  return redis.hset(datastores.redis.prefix + key, field, JSON.stringify(value));\n}\n\nexport async function hdel(key: string, field: string) {\n  if (!redis) return;\n  return redis.hdel(datastores.redis.prefix + key, field);\n}\n\nexport async function hlen(key: string) {\n  if (!redis) return;\n  return redis.hlen(datastores.redis.prefix + key);\n}\n\nexport async function lpush(key: string, ...values: any[]) {\n  if (!redis) return;\n  return redis.lpush(datastores.redis.prefix + key, ...values.map(value => JSON.stringify(value)));\n}\n\nexport async function rpush(key: string, ...values: any[]) {\n  if (!redis) return;\n  return redis.rpush(datastores.redis.prefix + key, ...values.map(value => JSON.stringify(value)));\n}\n\nexport async function lrange(key: string, start = 0, end = -1) {\n  if (!redis) return [];\n  return redis.lrange(datastores.redis.prefix + key, start, end);\n}\n\nexport async function lpop(key: string) {\n  if (!redis) return;\n  const result = await redis.lpop(datastores.redis.prefix + key);\n  if (!result) return result;\n  return JSON.parse(result);\n}\n\nexport async function rpop(key: string) {\n  if (!redis) return;\n  const result = await redis.rpop(datastores.redis.prefix + key);\n  if (!result) return result;\n  return JSON.parse(result);\n}\n\nexport async function incr(key: string, by = 1) {\n  if (!redis) return;\n  const result = await redis.incrby(datastores.redis.prefix + key, by);\n  return result;\n}\n\nexport async function decr(key: string, by = 1) {\n  if (!redis) return;\n  const result = await redis.decrby(datastores.redis.prefix + key, by);\n  return result;\n}\n"],"sourceRoot":"../../../src"}