{"version":3,"sources":["../api/services/StackService/addNews.ts"],"names":[],"mappings":"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","file":"addNews.js","sourcesContent":["import { Client, EventStackNews, News, sequelize, Stack } from '@Models';\nimport { RedstoneError, ResourceNotFoundErrorType } from '@Types';\nimport * as RecordService from '@Services/RecordService';\nimport { getNewsroomSocket } from '@Services/EventService';\n\nasync function addNews(stackId: number, newsId: number, clientId: number) {\n  const stack = await Stack.findByPk(stackId);\n  if (!stack) {\n    throw new RedstoneError(ResourceNotFoundErrorType, '无法找到该进展');\n  }\n\n  const news = await News.findByPk(newsId);\n  if (!news) {\n    throw new RedstoneError(ResourceNotFoundErrorType, '无法找到该新闻');\n  }\n\n  let eventStackNews = await EventStackNews.findOne({\n    where: {\n      eventId: stack.eventId,\n      stackId: stack.id,\n      newsId: news.id,\n    },\n  });\n  if (eventStackNews) {\n    return null;\n  }\n\n  await sequelize.transaction(async transaction => {\n    const eventNews = await EventStackNews.findOne({\n      where: {\n        eventId: stack.eventId,\n        newsId: news.id,\n      },\n    });\n    const isInEvent = !!eventNews;\n\n    const time = new Date();\n    if (!isInEvent) {\n      eventStackNews = await EventStackNews.create({\n        eventId: stack.eventId,\n        newsId: news.id,\n      }, { transaction });\n\n      await RecordService.create({\n        model: 'EventStackNews',\n        data: eventStackNews,\n        target: stack.eventId,\n        subtarget: news.id,\n        owner: clientId,\n        action: 'addNewsToEvent',\n        createdAt: time,\n      }, { transaction });\n\n      eventStackNews = await EventStackNews.create({\n        stackId: stack.id,\n        newsId: news.id,\n      }, { transaction });\n    } else {\n      if (eventNews.stackId) {\n        await RecordService.destroy({\n          model: 'EventStackNews',\n          data: eventNews,\n          target: eventNews.stackId,\n          subtarget: news.id,\n          owner: clientId,\n          action: 'removeNewsFromStack',\n        }, { transaction });\n      }\n\n      eventNews.stackId = stack.id;\n      await eventNews.save({ transaction });\n      eventStackNews = eventNews;\n    }\n\n    await RecordService.create({\n      model: 'EventStackNews',\n      data: eventStackNews,\n      target: stack.id,\n      subtarget: news.id,\n      owner: clientId,\n      action: 'addNewsToStack',\n      createdAt: time,\n    }, { transaction });\n  });\n\n  const socket = await getNewsroomSocket(stack.eventId);\n  socket.emit('add news to stack', {\n    eventStackNews,\n    stack,\n    news,\n    client: await Client.findByPk(clientId),\n  });\n\n  return eventStackNews;\n}\n\nexport default addNews;\n"],"sourceRoot":"../../../../src"}