{"version":3,"sources":["../api/services/StackService/acquireContributionsByStackList.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,wEAAgD;AAEhD,SAAe,+BAA+B,CAAE,SAAqB;;QACnE,MAAM,KAAK,GAAG,EAAE,CAAC;QAEjB,MAAM,iBAAiB,GAAG,CAAO,KAAe,EAAE,EAAE;YAClD,KAAK,CAAC,YAAY,GAAG,MAAM,IAAA,yBAAe,EAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAA,CAAC;QAEF,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE;YAC7B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;SACtC;QAED,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,SAAS,CAAC;IACnB,CAAC;CAAA;AAED,kBAAe,+BAA+B,CAAC","file":"acquireContributionsByStackList.js","sourcesContent":["import { StackObj } from '@Types';\nimport getContribution from './getContribution';\n\nasync function acquireContributionsByStackList (stackList: StackObj[]) {\n  const queue = [];\n\n  const getContributionFn = async (stack: StackObj) => {\n    stack.contribution = await getContribution(stack);\n  };\n\n  for (const stack of stackList) {\n    queue.push(getContributionFn(stack));\n  }\n\n  await Promise.all(queue);\n  return stackList;\n}\n\nexport default acquireContributionsByStackList;\n"],"sourceRoot":"../../../../src"}