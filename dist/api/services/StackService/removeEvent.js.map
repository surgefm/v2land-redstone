{"version":3,"sources":["../api/services/StackService/removeEvent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,qCAAgC;AAChC,mCAAkE;AAClE,uEAAyD;AACzD,mEAAqD;AAOrD,SAAe,WAAW,CAAC,OAAe,EAAE,QAAgB,EAAE,EAAE,WAAW,EAAE,IAAI,KAAyB,EAAE;;QAC1G,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,sBAAa,CAAC,kCAAyB,EAAE,SAAS,CAAC,CAAC;SAC/D;QACD,IAAI,CAAC,KAAK,CAAC,YAAY;YAAE,OAAO;QAEhC,MAAM,WAAW,CAAC,mBAAmB,CAAC,CAAM,WAAW,EAAC,EAAE;YACxD,MAAM,aAAa,CAAC,MAAM,CAAC;gBACzB,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;gBAC5B,MAAM,EAAE,EAAE,YAAY,EAAE,KAAK,CAAC,YAAY,EAAE;gBAC5C,MAAM,EAAE,KAAK,CAAC,EAAE;gBAChB,SAAS,EAAE,KAAK,CAAC,YAAY;gBAC7B,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,sBAAsB;gBAC9B,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,IAAI;aAChB,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YAEpB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;QACpC,CAAC,CAAA,EAAE,WAAW,CAAC,CAAC;QAEhB,OAAO,KAAK,CAAC;IACf,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","file":"removeEvent.js","sourcesContent":["import { Transaction } from 'sequelize';\nimport { Stack } from '@Models';\nimport { RedstoneError, ResourceNotFoundErrorType } from '@Types';\nimport * as RecordService from '@Services/RecordService';\nimport * as UtilService from '@Services/UtilService';\n\ninterface RemoveEventOptions {\n  transaction?: Transaction;\n  time?: Date;\n}\n\nasync function removeEvent(stackId: number, clientId: number, { transaction, time }: RemoveEventOptions = {}) {\n  const stack = await Stack.findByPk(stackId, { transaction });\n  if (!stack) {\n    throw new RedstoneError(ResourceNotFoundErrorType, '无法找到该进展');\n  }\n  if (!stack.stackEventId) return;\n\n  await UtilService.execWithTransaction(async transaction => {\n    await RecordService.update({\n      model: 'Stack',\n      data: { stackEventId: null },\n      before: { stackEventId: stack.stackEventId },\n      target: stack.id,\n      subtarget: stack.stackEventId,\n      owner: clientId,\n      action: 'removeEventFromStack',\n      createdAt: time,\n      updatedAt: time,\n    }, { transaction });\n\n    stack.stackEventId = null;\n    await stack.save({ transaction });\n  }, transaction);\n\n  return stack;\n}\n\nexport default removeEvent;\n"],"sourceRoot":"../../../../src"}