{"version":3,"sources":["../api/services/StackService/findStack.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAgE;AAEhE,wEAAgD;AAGhD,SAAe,SAAS,CAAC,EAAU,EAAE,oBAAoB,GAAG,IAAI,EAAE,EAAE,WAAW,KAE3E,EAAE;;QACJ,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,EAAE,EAAE;YACrC,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,cAAI;oBACX,EAAE,EAAE,MAAM;oBACV,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;oBAC7B,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBACxB,OAAO,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;oBAC3B,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,cAAI;4BACX,EAAE,EAAE,MAAM;4BACV,QAAQ,EAAE,KAAK;yBAChB,EAAE;4BACD,KAAK,EAAE,qBAAW;4BAClB,EAAE,EAAE,aAAa;4BACjB,QAAQ,EAAE,KAAK;yBAChB,CAAC;iBACH,EAAE;oBACD,KAAK,EAAE,eAAK;oBACZ,EAAE,EAAE,YAAY;oBAChB,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;oBAC7B,QAAQ,EAAE,KAAK;iBAChB,CAAC;YACF,WAAW;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,MAAM,QAAQ,GAAa,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACtD,QAAQ,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;YAC9C,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;YAC7B,WAAW;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YAClD,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACpC;QACD,QAAQ,CAAC,YAAY,GAAG,MAAM,IAAA,yBAAe,EAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAE3E,OAAO,QAAQ,CAAC;IAClB,CAAC;CAAA;AAED,kBAAe,SAAS,CAAC","file":"findStack.js","sourcesContent":["import { News, Stack, Event, Site, SiteAccount } from '@Models';\nimport { StackObj } from '@Types';\nimport getContribution from './getContribution';\nimport { Transaction } from 'sequelize';\n\nasync function findStack(id: number, withContributionData = true, { transaction }: {\n  transaction?: Transaction;\n} = {}) {\n  const stack = await Stack.findByPk(id, {\n    include: [{\n      model: News,\n      as: 'news',\n      where: { status: 'admitted' },\n      order: [['time', 'ASC']],\n      through: { attributes: [] },\n      required: false,\n      include: [{\n        model: Site,\n        as: 'site',\n        required: false,\n      }, {\n        model: SiteAccount,\n        as: 'siteAccount',\n        required: false,\n      }],\n    }, {\n      model: Event,\n      as: 'stackEvent',\n      where: { status: 'admitted' },\n      required: false,\n    }],\n    transaction,\n  });\n\n  if (!stack) return;\n\n  const stackObj: StackObj = stack.get({ plain: true });\n  stackObj.newsCount = await stack.$count('news', {\n    where: { status: 'admitted' },\n    transaction,\n  });\n\n  if (!stack.time && stack.news && stack.news.length) {\n    stackObj.time = stack.news[0].time;\n  }\n  stackObj.contribution = await getContribution(stack, withContributionData);\n\n  return stackObj;\n}\n\nexport default findStack;\n"],"sourceRoot":"../../../../src"}