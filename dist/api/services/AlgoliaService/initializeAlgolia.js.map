{"version":3,"sources":["../api/services/AlgoliaService/initializeAlgolia.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAgE;AAChE,kDAAgF;AAChF,gDAA8E;AAC9E,8CAA4E;AAC5E,oDAAkF;AAClF,kDAAgF;AAChF,mCAAqC;AAE9B,MAAM,iBAAiB,GAAG,GAAS,EAAE;IAC1C,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,OAAO,EAAE,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,MAAM,IAAA,iCAAuB,EAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SAC1C;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,EAAE,CAAC;QAClC,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,MAAM,IAAA,gCAAsB,EAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3C;QAED,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,OAAO,EAAE,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,MAAM,IAAA,iCAAuB,EAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SAC1C;QAED,MAAM,OAAO,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;QACvC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC5B,MAAM,IAAA,kCAAwB,EAAC,EAAE,MAAM,EAAE,CAAC,CAAC;SAC5C;QAED,MAAM,IAAI,GAAG,MAAM,aAAG,CAAC,OAAO,EAAE,CAAC;QACjC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,MAAM,IAAA,+BAAqB,EAAC,EAAE,GAAG,EAAE,CAAC,CAAC;SACtC;QAED,MAAM,KAAK,GAAG,MAAM,cAAI,CAAC,OAAO,EAAE,CAAC;QACnC,MAAM,IAAA,kBAAU,EAAC,KAAK,CAAC,CAAC;KACzB;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;AACH,CAAC,CAAA,CAAC;AAhCW,QAAA,iBAAiB,qBAgC5B","file":"initializeAlgolia.js","sourcesContent":["import { Event, News, Stack, Client, Tag, Site } from '@Models';\nimport { updateAlgoliaIndex as updateEventAlgoliaIndex } from '../EventService';\nimport { updateAlgoliaIndex as updateNewsAlgoliaIndex } from '../NewsService';\nimport { updateAlgoliaIndex as updateTagAlgoliaIndex } from '../TagService';\nimport { updateAlgoliaIndex as updateClientAlgoliaIndex } from '../ClientService';\nimport { updateAlgoliaIndex as updateStackAlgoliaIndex } from '../StackService';\nimport { updateSite } from './index';\n\nexport const initializeAlgolia = async () => {\n  try {\n    const events = await Event.findAll();\n    for (const event of events) {\n      await updateEventAlgoliaIndex({ event });\n    }\n\n    const news = await News.findAll();\n    for (const n of news) {\n      await updateNewsAlgoliaIndex({ news: n });\n    }\n\n    const stacks = await Stack.findAll();\n    for (const stack of stacks) {\n      await updateStackAlgoliaIndex({ stack });\n    }\n\n    const clients = await Client.findAll();\n    for (const client of clients) {\n      await updateClientAlgoliaIndex({ client });\n    }\n\n    const tags = await Tag.findAll();\n    for (const tag of tags) {\n      await updateTagAlgoliaIndex({ tag });\n    }\n\n    const sites = await Site.findAll();\n    await updateSite(sites);\n  } catch (err) {\n    console.log(err);\n  }\n};\n"],"sourceRoot":"../../../../src"}