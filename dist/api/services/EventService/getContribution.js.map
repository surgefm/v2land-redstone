{"version":3,"sources":["../api/services/EventService/getContribution.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAyC;AAEzC,uEAAyD;AACzD,yCAA+B;AAE/B,SAAe,eAAe,CAAC,KAA+B,EAAE,QAAQ,GAAG,IAAI;;QAC7E,MAAM,UAAU,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAC7D,IAAI,QAAQ,EAAE;YACZ,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB;QAED,MAAM,OAAO,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC;YACnC,UAAU;YACV,KAAK,EAAE;gBACL,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,CAAC;wBACR,MAAM,EAAE;4BACN,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,CAAC,aAAa,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;yBACnE;wBACD,MAAM,EAAE,KAAK,CAAC,EAAE;qBACjB;oBACD,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;wBAClB,MAAM,EAAE;4BACN,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,CAAC,wBAAwB,EAAE,wBAAwB,CAAC;yBAC9D;wBACD,MAAM,EAAE,OAAO,KAAK,CAAC,WAAW,KAAK,QAAQ;4BAC3C,CAAC,CAAC,KAAK,CAAC,WAAW;4BACnB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;qBACzB,CAAC,CAAC,CAAC,SAAS,CAAC;aACf;YACD,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,gBAAM;oBACb,UAAU,EAAE,aAAa,CAAC,eAAe;oBACzC,QAAQ,EAAE,KAAK;iBAChB,CAAC;YACF,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;CAAA;AAED,kBAAe,eAAe,CAAC","file":"getContribution.js","sourcesContent":["import { Client, Record } from '@Models';\nimport { SimplifiedEventInterface } from '@Types';\nimport * as ClientService from '@Services/ClientService';\nimport { Op } from 'sequelize';\n\nasync function getContribution(event: SimplifiedEventInterface, withData = true) {\n  const attributes = ['model', 'target', 'operation', 'owner'];\n  if (withData) {\n    attributes.push('before');\n    attributes.push('data');\n  }\n\n  const records = await Record.findAll({\n    attributes,\n    where: {\n      [Op.or]: [{\n        action: {\n          [Op.or]: ['createEvent', 'updateEventStatus', 'updateEventDetail'],\n        },\n        target: event.id,\n      },\n      event.headerImage ? {\n        action: {\n          [Op.or]: ['createEventHeaderImage', 'updateEventHeaderImage'],\n        },\n        target: typeof event.headerImage === 'number'\n          ? event.headerImage\n          : event.headerImage.id,\n      } : undefined],\n    },\n    include: [{\n      model: Client,\n      attributes: ClientService.sanitizedFields,\n      required: false,\n    }],\n    order: [['updatedAt', 'DESC']],\n  });\n\n  return records;\n}\n\nexport default getContribution;\n"],"sourceRoot":"../../../../src"}