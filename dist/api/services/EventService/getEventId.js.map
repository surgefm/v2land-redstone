{"version":3,"sources":["../api/services/EventService/getEventId.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAgC;AAChC,uEAAyD;AACzD,qEAAuD;AACvD,oDAAuB;AAEvB,SAAe,UAAU,CAAC,SAAsD,EAAE,UAA4B;;QAC5G,IAAI,IAAI,GAAG,SAAmB,CAAC;QAC/B,IAAI,QAAQ,GAAG,UAAU,CAAC;QAE1B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;YAC3B,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;SAC/B;QAED,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,OAAO,IAAI,CAAC;QAC1C,IAAI,CAAC,gBAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YAAE,OAAO,CAAC,IAAI,CAAC;QAElC,MAAM,QAAQ,GAAG,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC5D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,QAAQ;YAAE,OAAO,QAAQ,CAAC;QAE9B,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;YAChC,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,KAAK,EAAE;gBACL,IAAI;gBACJ,OAAO,EAAE,MAAM,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC;aACnD;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QACxB,MAAM,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;QAE3C,OAAO,KAAK,CAAC,EAAE,CAAC;IAClB,CAAC;CAAA;AAED,kBAAe,UAAU,CAAC","file":"getEventId.js","sourcesContent":["import { Event } from '@Models';\nimport * as ClientService from '@Services/ClientService';\nimport * as RedisService from '@Services/RedisService';\nimport _ from 'lodash';\n\nasync function getEventId(eventName: string | number | { [key: string]: string }, clientName?: string | number): Promise<number> {\n  let name = eventName as string;\n  let username = clientName;\n\n  if (typeof eventName === 'object') {\n    name = eventName.eventName;\n    username = eventName.username;\n  }\n\n  if (typeof name === 'number') return name;\n  if (!_.isNaN(+name)) return +name;\n\n  const redisKey = RedisService.getEventIdKey(name, username);\n  const redisRes = await RedisService.get(redisKey);\n  if (redisRes) return redisRes;\n\n  const event = await Event.findOne({\n    attributes: ['id'],\n    where: {\n      name,\n      ownerId: await ClientService.getClientId(username),\n    },\n  });\n\n  if (!event) return null;\n  await RedisService.set(redisKey, event.id);\n\n  return event.id;\n}\n\nexport default getEventId;\n"],"sourceRoot":"../../../../src"}