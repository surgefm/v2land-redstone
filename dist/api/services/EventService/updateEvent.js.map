{"version":3,"sources":["../api/services/EventService/updateEvent.ts"],"names":[],"mappings":"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","file":"updateEvent.js","sourcesContent":["import { Event, Client, sequelize } from '@Models';\nimport { EventObj } from '@Types';\nimport * as RecordService from '@Services/RecordService';\nimport * as RedisService from '@Services/RedisService';\nimport * as NotificationService from '@Services/NotificationService';\nimport generatePinyin from './generatePinyin';\nimport updateAlgoliaIndex from './updateAlgoliaIndex';\n\nasync function updateEvent(event: Event, data: EventObj, client: Client) {\n  const changes: any = {};\n  for (const attribute of ['name', 'description', 'status', 'needContributor']) {\n    if (data[attribute] !== 'undefined' && data[attribute] !== (event as EventObj)[attribute]) {\n      changes[attribute] = data[attribute];\n    }\n  }\n\n  if (Object.getOwnPropertyNames(changes).length === 0) null;\n\n  if (changes.name) {\n    changes.pinyin = await generatePinyin(changes.name);\n  }\n\n  await sequelize.transaction(async transaction => {\n    const query = {\n      model: 'Event',\n      owner: client.id,\n    };\n\n    if (changes.status) {\n      const oldStatus = event.status;\n      event.status = changes.status;\n      await event.save({ transaction });\n\n      await RecordService.update({\n        ...query,\n        action: 'updateEventStatus',\n        data: { status: changes.status },\n        before: oldStatus,\n        target: event.id,\n      }, { transaction });\n    }\n\n    if (changes.needContributor !== undefined) {\n      const oldNeedContributor = event.needContributor;\n      event.needContributor = changes.needContributor;\n      await event.save({ transaction });\n\n      await RecordService.update({\n        ...query,\n        action: changes.needContributor ? 'openApplication' : 'closeApplication',\n        data: { needContributor: changes.needContributor },\n        before: oldNeedContributor,\n        target: event.id,\n      }, { transaction });\n    }\n\n    NotificationService.notifyWhenEventStatusChanged(event, changes, client);\n\n    delete changes.status;\n    delete changes.needContributor;\n\n    const before: any = {};\n    for (const i of Object.keys(changes)) {\n      before[i] = (event as EventObj)[i];\n    }\n\n    if (Object.keys(changes).length > 0) {\n      for (const key of Object.keys(changes)) {\n        (event as any)[key] = changes[key];\n      }\n      await event.save({ transaction });\n\n      await RecordService.update({\n        ...query,\n        action: 'updateEventDetail',\n        data: changes,\n        before,\n        target: event.id,\n      }, { transaction });\n    }\n  });\n\n  if (event.ownerId) {\n    await RedisService.set(RedisService.getEventIdKey(event.name, event.ownerId), event.id);\n    const client = await Client.findByPk(event.ownerId, { attributes: ['id'] });\n    await RedisService.set(RedisService.getEventIdKey(event.name, client.username), event.id);\n  }\n  updateAlgoliaIndex({ eventId: event.id });\n\n  return event;\n}\n\nexport default updateEvent;\n"],"sourceRoot":"../../../../src"}