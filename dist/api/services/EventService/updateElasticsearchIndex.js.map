{"version":3,"sources":["../api/services/EventService/updateElasticsearchIndex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA6C;AAE7C,8EAAgE;AAEhE,SAAe,wBAAwB,CAAC,EAAE,KAAK,EAAE,OAAO,EAGvD;;QACC,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;gBAC1B,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;gBACtB,OAAO,EAAE,CAAC;wBACR,KAAK,EAAE,qBAAW;wBAClB,EAAE,EAAE,aAAa;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC;aACH,CAAC,CAAC;SACJ;QAED,IAAI,KAAK,CAAC,GAAG,EAAE;YACb,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACpC;QAED,OAAO,oBAAoB,CAAC,MAAM,CAAC;YACjC,KAAK,EAAE,QAAQ;YACf,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE;YACjB,IAAI,EAAE;gBACJ,KAAK,EAAE,KAAK;gBACZ,eAAe,EAAE,IAAI;aACtB;SACF,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,wBAAwB,CAAC","file":"updateElasticsearchIndex.js","sourcesContent":["import { Event, HeaderImage } from '@Models';\nimport { EventObj } from '@Types';\nimport * as ElasticsearchService from '../ElasticsearchService';\n\nasync function updateElasticsearchIndex({ event, eventId }: {\n  event?: EventObj;\n  eventId?: number;\n}) {\n  if (!event) {\n    event = await Event.findOne({\n      where: { id: eventId },\n      include: [{\n        model: HeaderImage,\n        as: 'headerImage',\n        required: false,\n      }],\n    });\n  }\n\n  if (event.get) {\n    event = event.get({ plain: true });\n  }\n\n  return ElasticsearchService.update({\n    index: 'events',\n    id: event.id + '',\n    body: {\n      'doc': event,\n      'doc_as_upsert': true,\n    },\n  });\n}\n\nexport default updateElasticsearchIndex;\n"],"sourceRoot":"../../../../src"}