{"version":3,"sources":["../api/services/ClientService/findClient.ts"],"names":[],"mappings":"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","file":"findClient.js","sourcesContent":["import { Auth, Subscription, Contact, Client, TagCurator } from '@Models';\nimport { Transaction, Op, Includeable } from 'sequelize';\nimport * as StarService from '@Services/StarService';\n\nimport getEventsClientContributedTo from './getEventsClientContributedTo';\n\nasync function findClient(\n  clientName: string | number | Client,\n  {\n    transaction,\n    withAuths = true,\n    withSubscriptions = true,\n    withEvents = false,\n    withStars = false,\n    withPassword = false,\n    forceUpdate = false,\n    withCuratorRoles = false,\n  }: {\n    transaction?: Transaction;\n    withAuths?: boolean;\n    withSubscriptions?: boolean;\n    withEvents?: boolean;\n    withStars?: boolean;\n    withPassword?: boolean;\n    withCuratorRoles?: boolean;\n    forceUpdate?: boolean;\n  } = {}) {\n  if (clientName instanceof Client) {\n    if (forceUpdate) {\n      clientName = clientName.id;\n    } else {\n      return clientName;\n    }\n  }\n\n  let where;\n\n  if (+clientName > 0) {\n    where = {\n      id: +clientName,\n    };\n  } else if (typeof clientName === 'string') {\n    clientName = clientName.trim();\n    where = {\n      [Op.or]: [\n        { username: { [Op.iLike]: clientName } },\n        { email: { [Op.iLike]: clientName } },\n      ],\n    };\n  }\n\n  const include: Includeable[] = [];\n  if (withAuths) {\n    include.push({\n      as: 'auths',\n      model: Auth,\n      where: {\n        profileId: { [Op.not]: null },\n      },\n      attributes: ['id', 'site', 'profileId', 'profile'],\n      required: false,\n    });\n  }\n\n  if (withSubscriptions) {\n    include.push({\n      as: 'subscriptions',\n      model: Subscription,\n      where: { status: 'active' },\n      order: [['createdAt', 'DESC']],\n      required: false,\n      include: [{\n        model: Contact,\n        where: { status: 'active' },\n      }],\n    });\n  }\n\n  const client = await Client.findOne({\n    where,\n    attributes: { exclude: withPassword ? [] : ['password'] },\n    include,\n    transaction,\n  });\n\n  if (withEvents) {\n    client.events = await getEventsClientContributedTo(client.id);\n  }\n\n  if (withStars) {\n    client.stars = await StarService.getClientStars(client.id);\n  }\n\n  if (withCuratorRoles) {\n    client.curatorRoles = await TagCurator.findAll({\n      where: {\n        curatorId: client.id,\n      },\n    });\n  }\n\n  return client;\n}\n\nexport default findClient;\n"],"sourceRoot":"../../../../src"}