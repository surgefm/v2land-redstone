{"version":3,"sources":["../api/services/ClientService/randomlyGenerateUsername.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,+GAAuF;AAEvF,SAAe,wBAAwB,CAAC,eAAuB,IAAI,EAAE,MAAM,GAAG,EAAE;;QAC9E,IAAI,MAAM,GAAG,YAAY,IAAI,IAAA,sCAA4B,GAAE,CAAC;QAE5D,MAAM,UAAU,GAAG,IAAI,gBAAM,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QACpD,IAAI;YACF,MAAM,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACrD;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC/C;QAED,IAAI,MAAM,gBAAM,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE;YACzD,OAAO,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC/C;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA;AAED,kBAAe,wBAAwB,CAAC","file":"randomlyGenerateUsername.js","sourcesContent":["import { Client } from '@Models';\nimport generateRandomAlphabetString from '../UtilService/generateRandomAlphabetString';\n\nasync function randomlyGenerateUsername(defaultValue: string = null, length = 12): Promise<string> {\n  let string = defaultValue || generateRandomAlphabetString();\n\n  const testClient = new Client({ username: string });\n  try {\n    await testClient.validate({ fields: ['username'] });\n  } catch (err) {\n    return randomlyGenerateUsername(null, length);\n  }\n\n  if (await Client.findOne({ where: { username: string } })) {\n    return randomlyGenerateUsername(null, length);\n  }\n\n  return string;\n}\n\nexport default randomlyGenerateUsername;\n"],"sourceRoot":"../../../../src"}