{"version":3,"sources":["../api/services/ClientService/updateAlgoliaIndex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAiC;AAEjC,sDAAiD;AACjD,sEAA8C;AAE9C,SAAe,kBAAkB,CAC/B,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAEiC;;QAEhE,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC;gBAC5B,KAAK,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE;gBACvB,WAAW;aACZ,CAAC,CAAC;SACJ;QAED,IAAI,SAAS,GAAQ,MAAM,CAAC;QAC5B,IAAI,CAAC,SAAS;YAAE,OAAO;QACvB,IAAI,MAAM,CAAC,GAAG,EAAE;YACd,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACzC;QAED,SAAS,GAAG,IAAA,wBAAc,EAAC,SAAS,CAAC,CAAC;QAEtC,OAAO,IAAA,6BAAY,EAAC,SAAS,CAAC,CAAC;IACjC,CAAC;CAAA;AAED,kBAAe,kBAAkB,CAAC","file":"updateAlgoliaIndex.js","sourcesContent":["import { Client } from '@Models';\nimport { Transaction } from 'sequelize';\nimport { updateClient } from '../AlgoliaService';\nimport sanitizeClient from './sanitizeClient';\n\nasync function updateAlgoliaIndex(\n  { client, clientId, transaction }:\n  { client?: Client; clientId: number; transaction?: Transaction } |\n  { client: Client; clientId?: number; transaction?: Transaction },\n) {\n  if (!client) {\n    client = await Client.findOne({\n      where: { id: clientId },\n      transaction,\n    });\n  }\n\n  let clientObj: any = client;\n  if (!clientObj) return;\n  if (client.get) {\n    clientObj = client.get({ plain: true });\n  }\n\n  clientObj = sanitizeClient(clientObj);\n\n  return updateClient(clientObj);\n}\n\nexport default updateAlgoliaIndex;\n"],"sourceRoot":"../../../../src"}