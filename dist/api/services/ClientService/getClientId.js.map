{"version":3,"sources":["../api/services/ClientService/getClientId.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA4C;AAC5C,qEAAuD;AACvD,oDAAuB;AAEvB,SAAe,WAAW,CAAC,UAA2B;;QACpD,IAAI,OAAO,UAAU,KAAK,QAAQ;YAAE,OAAO,UAAU,CAAC;QACtD,IAAI,CAAC,gBAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;YAAE,OAAO,CAAC,UAAU,CAAC;QAE9C,MAAM,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,QAAQ;YAAE,OAAO,QAAQ,CAAC;QAE9B,MAAM,MAAM,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC;YAClC,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,KAAK,EAAE;gBACL,QAAQ,EAAE;oBACR,CAAC,mBAAS,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,UAAU;iBACjC;aACF;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QACzB,MAAM,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QAE5C,OAAO,MAAM,CAAC,EAAE,CAAC;IACnB,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","file":"getClientId.js","sourcesContent":["import { Client, Sequelize } from '@Models';\nimport * as RedisService from '@Services/RedisService';\nimport _ from 'lodash';\n\nasync function getClientId(clientName: string | number): Promise<number> {\n  if (typeof clientName === 'number') return clientName;\n  if (!_.isNaN(+clientName)) return +clientName;\n\n  const redisKey = RedisService.getClientIdKey(clientName);\n  const redisRes = await RedisService.get(redisKey);\n  if (redisRes) return redisRes;\n\n  const client = await Client.findOne({\n    attributes: ['id'],\n    where: {\n      username: {\n        [Sequelize.Op.iLike]: clientName,\n      },\n    },\n  });\n\n  if (!client) return null;\n  await RedisService.set(redisKey, client.id);\n\n  return client.id;\n}\n\nexport default getClientId;\n"],"sourceRoot":"../../../../src"}