{"version":3,"sources":["../api/services/ClientService/updateElasticsearchIndex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,mFAA2D;AAC3D,sEAA8C;AAE9C,SAAe,wBAAwB,CACrC,EAAE,MAAM,EAAE,QAAQ,EAA+E;;QAEjG,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC;gBAC5B,KAAK,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE;aACxB,CAAC,CAAC;SACJ;QAED,IAAI,SAAc,CAAC;QACnB,IAAI,MAAM,CAAC,GAAG,EAAE;YACd,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACzC;QAED,SAAS,GAAG,IAAA,wBAAc,EAAC,SAAS,CAAC,CAAC;QAEtC,OAAO,8BAAoB,CAAC,MAAM,CAAC;YACjC,KAAK,EAAE,SAAS;YAChB,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,IAAI,EAAE;gBACJ,KAAK,EAAE,SAAS;gBAChB,eAAe,EAAE,IAAI;aACtB;SACF,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,wBAAwB,CAAC","file":"updateElasticsearchIndex.js","sourcesContent":["import { Client } from '@Models';\nimport ElasticsearchService from '../ElasticsearchService';\nimport sanitizeClient from './sanitizeClient';\n\nasync function updateElasticsearchIndex(\n  { client, clientId }: { client?: Client; clientId: number } | {client: Client; clientId?: number},\n) {\n  if (!client) {\n    client = await Client.findOne({\n      where: { id: clientId },\n    });\n  }\n\n  let clientObj: any;\n  if (client.get) {\n    clientObj = client.get({ plain: true });\n  }\n\n  clientObj = sanitizeClient(clientObj);\n\n  return ElasticsearchService.update({\n    index: 'clients',\n    id: client.id,\n    body: {\n      'doc': clientObj,\n      'doc_as_upsert': true,\n    },\n  });\n}\n\nexport default updateElasticsearchIndex;\n"],"sourceRoot":"../../../../src"}