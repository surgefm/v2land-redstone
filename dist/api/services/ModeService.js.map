{"version":3,"sources":["../api/services/ModeService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uDAAyC;AAyBvC,wCAAc;AAtBhB,MAAM,KAAK,GAAqC,EAAE,CAAC;AAmBjD,sBAAK;AAjBP,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;IAC7C,MAAM,IAAI,GAAsB,cAAsB,CAAC,GAAG,CAAC,CAAC;IAC5D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;CACzB;AAED,SAAS,mBAAmB,CAAC,MAAc;IACzC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1E,OAAO,OAAO,MAAM,GAAG,IAAI,QAAQ,CAAC;AACtC,CAAC;AASC,kDAAmB;AAPrB,SAAS,OAAO,CAAC,IAAY;IAC3B,IAAK,cAAsB,CAAC,IAAI,CAAC;QAAE,OAAQ,cAAsB,CAAC,IAAI,CAAC,CAAC;IACxE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;AAC7B,CAAC;AAKC,0BAAO","file":"ModeService.js","sourcesContent":["import { Report } from '@Models';\nimport * as modeCollection from '@Modes';\nimport { NotificationMode } from '@Types';\n\nconst names: Record<string, NotificationMode> = {};\n\nfor (const key of Object.keys(modeCollection)) {\n  const mode: NotificationMode = (modeCollection as any)[key];\n  names[mode.name] = mode;\n}\n\nfunction getRecordActionName(report: Report) {\n  const method = report.method.slice(0, 1).toUpperCase() + report.method.slice(1);\n  const type = report.type.slice(0, 1).toUpperCase() + report.type.slice(1);\n  return `send${method}${type}Report`;\n}\n\nfunction getMode(mode: string) {\n  if ((modeCollection as any)[mode]) return (modeCollection as any)[mode];\n  return names[mode] || null;\n}\n\nexport {\n  names,\n  getRecordActionName,\n  getMode,\n  modeCollection,\n};\n"],"sourceRoot":"../../../src"}