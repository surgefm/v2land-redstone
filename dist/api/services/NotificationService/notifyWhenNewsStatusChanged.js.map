{"version":3,"sources":["../api/services/NotificationService/notifyWhenNewsStatusChanged.ts"],"names":[],"mappings":"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","file":"notifyWhenNewsStatusChanged.js","sourcesContent":["import { MissingParameterError } from '@Utils/errors';\nimport { globals } from '@Configs';\nimport { Client, News, Event, Record } from '@Models';\nimport * as TelegramService from '../TelegramService';\nimport * as SlackService from '../SlackService';\nimport * as ClientService from '../ClientService';\n\nasync function notifyWhenNewsStatusChanged(\n  oldNews: News,\n  newNews: News,\n  client: number | string | Client,\n) {\n  if (!newNews) {\n    throw new MissingParameterError('newNews');\n  }\n  client = await ClientService.findClient(client, { forceUpdate: false });\n  if (!client) {\n    throw new MissingParameterError('client');\n  }\n  if (['pending', 'rejected'].includes(oldNews.status) &&\n    newNews.status === 'admitted') {\n    await sendTelegramNotification(newNews, 'admitted', client);\n  } else if (oldNews.status === 'admitted' &&\n    newNews.status !== 'admitted') {\n    await sendTelegramNotification(newNews, 'rejected', client);\n  }\n}\n\nasync function sendTelegramNotification(\n  news: News,\n  status: string,\n  handler: Client,\n) {\n  const newStatusStringSet = {\n    'admitted': '审核通过了，进来看看吧！',\n    'pending': '改为待审核状态，如有疑虑请咨询任一社区管理员。',\n    'rejected': '拒绝了，如有疑虑请咨询任一社区管理员。',\n    'hidden': '隐藏了，如有疑虑请咨询任一社区管理员。',\n  };\n\n  let stacks = news.stacks;\n  if (!stacks) {\n    stacks = await news.$get('stacks', {\n      attributes: ['id', 'title'],\n    });\n  }\n\n  for (const stack of stacks) {\n    const event = await Event.findByPk(stack.eventId, { attributes: ['id', 'name'] });\n\n    const submitRecord = await Record.findOne({\n      where: {\n        model: 'News',\n        action: 'createNews',\n        target: news.id,\n      },\n      include: [{\n        model: Client,\n        required: true,\n      }],\n    });\n\n    const username = (submitRecord && submitRecord.ownedBy.username)\n      ? submitRecord.ownedBy.username\n      : '游客';\n\n    const sendSlack = async () => {\n      const content =\n        `*${ username }* 添加的新闻` +\n        ` <${ globals.site }/${ event.id }/${ stack.id }/${ news.id }|${ event.name }> ` +\n        `被管理员 *${ handler.username }* ${ (newStatusStringSet as any)[status] }`;\n      return SlackService.sendText(content);\n    };\n\n    const sendTelegram = async () => {\n      const content =\n        `*${ username }*添加的新闻` +\n        `「[${ event.name }](${ globals.site }/${ event.id }/${ stack.id }/${ news.id }) 」` +\n        `被管理员*${ handler.username }*${ (newStatusStringSet as any)[status] }`;\n      return TelegramService.sendText(content, 'Markdown');\n    };\n\n    await Promise.all([\n      sendSlack(),\n      sendTelegram(),\n    ]);\n  }\n}\n\nexport default notifyWhenNewsStatusChanged;\n"],"sourceRoot":"../../../../src"}