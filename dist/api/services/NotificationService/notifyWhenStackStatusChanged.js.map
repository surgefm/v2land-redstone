{"version":3,"sources":["../api/services/NotificationService/notifyWhenStackStatusChanged.ts"],"names":[],"mappings":"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","file":"notifyWhenStackStatusChanged.js","sourcesContent":["import { MissingParameterError } from '@Utils/errors';\nimport { globals } from '@Configs';\nimport { StackObj } from '@Types';\nimport { Client, Record, Stack, Event } from '@Models';\nimport * as TelegramService from '../TelegramService';\nimport * as SlackService from '../SlackService';\nimport * as ClientService from '../ClientService';\n\nasync function notifyWhenStackStatusChanged(\n  oldStack: StackObj,\n  newStack: Stack,\n  client: number | string | Client,\n) {\n  if (!oldStack) {\n    throw new MissingParameterError('newStack');\n  }\n  if (!newStack) {\n    throw new MissingParameterError('newStack');\n  }\n  client = await ClientService.findClient(client);\n  if (!client) {\n    throw new MissingParameterError('client');\n  }\n  if (['pending', 'rejected'].includes(oldStack.status) &&\n    newStack.status === 'admitted' &&\n    newStack.order >= 0) {\n    await sendTelegramNotification(newStack, 'admitted', client);\n  } else if (oldStack.status === 'admitted' &&\n    newStack.status !== 'admitted') {\n    await sendTelegramNotification(newStack, 'rejected', client);\n  }\n}\n\nasync function sendTelegramNotification(stack: Stack, status: string, handler: Client) {\n  const newStatusStringSet = {\n    'admitted': '审核通过了，进来看看吧！',\n    'pending': '改为待审核状态，如有疑虑请咨询任一社区管理员。',\n    'rejected': '拒绝了，如有疑虑请咨询任一社区管理员。',\n    'hidden': '隐藏了，如有疑虑请咨询任一社区管理员。',\n  };\n\n  let event = stack.event;\n  if (!event) {\n    event = await Event.findOne({\n      where: { id: stack.eventId },\n      attributes: ['id', 'title'],\n    });\n  }\n\n  const submitRecord = await Record.findOne({\n    where: {\n      model: 'Stack',\n      action: 'createStack',\n      target: stack.id,\n    },\n    include: [{\n      model: Client,\n      required: true,\n    }],\n  });\n\n  const username = (submitRecord && submitRecord.ownedBy.username)\n    ? submitRecord.ownedBy.username\n    : '游客';\n\n  const sendSlack = async () => {\n    const content =\n      `*${ username }* 创建的进展` +\n      ` <${ globals.site }/${ event.id }/${ stack.id }|${ event.name }> ` +\n      `被管理员 *${ handler.username }* ${ (newStatusStringSet as any)[status] }`;\n    return SlackService.sendText(content);\n  };\n\n  const sendTelegram = async () => {\n    const content =\n      `*${ username }*创建的进展` +\n      `「[${ event.name }](${ globals.site }/${ event.id }/${ stack.id }) 」` +\n      `被管理员*${ handler.username }*${ (newStatusStringSet as any)[status] }`;\n    return TelegramService.sendText(content, 'Markdown');\n  };\n\n  return Promise.all([\n    sendSlack(),\n    sendTelegram(),\n  ]);\n}\n\nexport default notifyWhenStackStatusChanged;\n"],"sourceRoot":"../../../../src"}