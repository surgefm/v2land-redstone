{"version":3,"sources":["../api/services/NotificationService/updateNewsNotifications.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA8E;AAC9E,4DAA8C;AAG9C,SAAe,uBAAuB,CACpC,IAAU,EACV,EAAE,WAAW,EAAE,KAAK,GAAG,KAAK,KAGxB,EAAE;;QAEN,MAAM,WAAW,GAAG,MAAM,gBAAM,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE;gBACL,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,MAAM,EAAE,eAAe;aACxB;YACD,WAAW;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,IAAI,WAAW;YAAE,OAAO;QAElC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;SACrD;QAED,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE;gBAChD,OAAO,EAAE,CAAC;wBACR,KAAK,EAAE,cAAI;wBACX,EAAE,EAAE,oBAAoB;qBACzB,CAAC;gBACF,WAAW;aACZ,CAAC,CAAC;YAEH,MAAM,UAAU,GAAG,KAAK,CAAC,kBAAkB,CAAC;YAE5C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAAE,OAAO;YAErE,IAAI,CAAC,WAAW,EAAE;gBAChB,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;oBAC9C,OAAO,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC9D,CAAC,CAAA,CAAC,CAAC;aACJ;iBAAM;gBACL,OAAO,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;aAC7D;SACF;IACH,CAAC;CAAA;AAED,SAAe,mBAAmB,CAAC,KAAY,EAAE,KAAY,EAAE,IAAU,EAAE,WAAwB;;QACjG,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;QAE9C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE;gBAC5C,MAAM,sBAAY,CAAC,MAAM,CAAC;oBACxB,MAAM,EAAE,WAAW;iBACpB,EAAE;oBACD,KAAK,EAAE;wBACL,OAAO,EAAE,KAAK,CAAC,EAAE;wBACjB,IAAI;qBACL;oBACD,WAAW;iBACZ,CAAC,CAAC;aACJ;YACD,MAAM,sBAAY,CAAC,MAAM,CAAC;gBACxB,IAAI,EAAE,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;gBAC9E,MAAM,EAAE,SAAS;gBACjB,IAAI;aACL,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;SACrB;QAED,MAAM,gBAAM,CAAC,MAAM,CAAC;YAClB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,IAAI,CAAC,EAAE;YACf,SAAS,EAAE,QAAQ;YACnB,MAAM,EAAE,eAAe;SACxB,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC;CAAA;AAED,kBAAe,uBAAuB,CAAC","file":"updateNewsNotifications.js","sourcesContent":["import { Record, News, Event, Stack, Notification, sequelize } from '@Models';\nimport * as ModeService from '../ModeService';\nimport { Transaction } from 'sequelize';\n\nasync function updateNewsNotifications(\n  news: News,\n  { transaction, force = false }: {\n    transaction?: Transaction;\n    force?: boolean;\n  } = {},\n) {\n  const recordCount = await Record.count({\n    where: {\n      model: 'News',\n      target: news.id,\n      action: 'notifyNewNews',\n    },\n    transaction,\n  });\n\n  if (!force && recordCount) return;\n\n  let stacks = news.stacks;\n  if (!stacks) {\n    stacks = await news.$get('stacks', { transaction });\n  }\n\n  for (const stack of stacks) {\n    const event = await Event.findByPk(stack.eventId, {\n      include: [{\n        model: News,\n        as: 'latestAdmittedNews',\n      }],\n      transaction,\n    });\n\n    const latestNews = event.latestAdmittedNews;\n\n    if (!force && (!latestNews || (+latestNews.id !== +news.id))) return;\n\n    if (!transaction) {\n      await sequelize.transaction(async transaction => {\n        return updateNotifications(event, stack, news, transaction);\n      });\n    } else {\n      return updateNotifications(event, stack, news, transaction);\n    }\n  }\n}\n\nasync function updateNotifications(event: Event, stack: Stack, news: News, transaction: Transaction) {\n  const modes = ['new', '7DaysSinceLatestNews'];\n\n  for (const mode of modes) {\n    if (ModeService.getMode(mode).keepLatestOnly) {\n      await Notification.update({\n        status: 'discarded',\n      }, {\n        where: {\n          eventId: event.id,\n          mode,\n        },\n        transaction,\n      });\n    }\n    await Notification.create({\n      time: await ModeService.getMode(mode).new({ event, stack, news, transaction }),\n      status: 'pending',\n      mode,\n    }, { transaction });\n  }\n\n  await Record.create({\n    model: 'News',\n    target: news.id,\n    operation: 'create',\n    action: 'notifyNewNews',\n  }, { transaction });\n}\n\nexport default updateNewsNotifications;\n"],"sourceRoot":"../../../../src"}