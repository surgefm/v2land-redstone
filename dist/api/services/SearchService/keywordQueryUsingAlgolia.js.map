{"version":3,"sources":["../api/services/SearchService/keywordQueryUsingAlgolia.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAiD;AACjD,8EAAgE;AAChE,8DAAsC;AAEtC,SAAe,8BAA8B,CAC3C,OAAe,EACf,IAAgC,EAChC,IAAI,GAAG,CAAC,EACR,IAAI,GAAG,EAAE;;QAET,IAAI,CAAC,oBAAoB,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC;QAC5C,MAAM,UAAU,GAA8C;YAC5D,KAAK,EAAE;gBACL,WAAW,EAAE;oBACX,8BAA8B;oBAC9B,KAAK,EAAE,OAAO;oBACd,MAAM,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC;iBAC1E;gBACD,IAAI;gBACJ,IAAI;aACL;SACF,CAAC;QAEF,yDAAyD;QACzD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,oBAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAe,CAAC,CAAC;YAC3E,IAAI,GAAG,cAAc,CAAC;SACvB;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC;YACxD,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,UAAU;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CAAA;AAED,kBAAe,8BAA8B,CAAC","file":"keywordQueryUsingAlgolia.js","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport * as ElasticsearchService from '../ElasticsearchService';\nimport SearchType from './searchType';\n\nasync function keywordQueryUsingElasticsearch(\n  keyword: string,\n  type?: SearchType | SearchType[],\n  from = 0,\n  size = 20\n) {\n  if (!ElasticsearchService.client) return {};\n  const searchBody: ElasticsearchService.SearchBodyMultiMatch = {\n    query: {\n      multi_match: {\n        // Match title, abstract, etc.\n        query: keyword,\n        fields: ['title', 'abstract', 'content', 'author', 'name', 'description'],\n      },\n      from,\n      size,\n    },\n  };\n\n  // If search type is not provided, search among all types\n  if (type === undefined) {\n    const allSearchTypes = Object.keys(SearchType).map((k) => k as SearchType);\n    type = allSearchTypes;\n  }\n\n  const { body } = await ElasticsearchService.client.search({\n    index: type,\n    body: searchBody,\n  });\n  return body.hits;\n}\n\nexport default keywordQueryUsingElasticsearch;\n"],"sourceRoot":"../../../../src"}