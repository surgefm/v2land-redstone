{"version":3,"sources":["../api/services/TagService/getTagHierarchyPath.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAyC;AAElC,MAAM,mBAAmB,GAAG,CAAO,EAAE,GAAG,EAAE,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,WAAW,EAIpF,EAAE,EAAE;IACH,IAAI,aAAa,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,IAAI,QAAQ,EAAE;QACZ,IAAI,MAAM,GAAG,MAAM,aAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QAC3D,OAAO,MAAM,CAAC,QAAQ,EAAE;YACtB,aAAa,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,CAAC;YAC9C,MAAM,GAAG,MAAM,aAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;SAC/D;QACD,aAAa,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,CAAC;KAC/C;IACD,OAAO,aAAa,CAAC;AACvB,CAAC,CAAA,CAAC;AAfW,QAAA,mBAAmB,uBAe9B;AAEF,kBAAe,2BAAmB,CAAC","file":"getTagHierarchyPath.js","sourcesContent":["import { Tag, Sequelize } from '@Models';\n\nexport const getTagHierarchyPath = async ({ tag, parentId = tag.parentId, transaction }: {\n  tag: Tag;\n  parentId?: number;\n  transaction?: Sequelize.Transaction;\n}) => {\n  let hierarchyPath = [tag.id];\n  if (parentId) {\n    let parent = await Tag.findByPk(parentId, { transaction });\n    while (parent.parentId) {\n      hierarchyPath = [parent.id, ...hierarchyPath];\n      parent = await Tag.findByPk(parent.parentId, { transaction });\n    }\n    hierarchyPath = [parent.id, ...hierarchyPath];\n  }\n  return hierarchyPath;\n};\n\nexport default getTagHierarchyPath;\n"],"sourceRoot":"../../../../src"}