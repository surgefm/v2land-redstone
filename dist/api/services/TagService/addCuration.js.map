{"version":3,"sources":["../api/services/TagService/addCuration.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA6B;AAC7B,qCAA4E;AAC5E,qFAAuE;AACvE,uEAAyD;AACzD,2DAA0D;AAE1D,SAAe,WAAW,CAAC,KAAa,EAAE,SAAiB,EAAE,OAAe,EAAE,KAAa,EAAE,OAAO,GAAG,EAAE;;QACvG,MAAM,SAAS,GAAG,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACpF,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,UAAU,GAAG,MAAM,oBAAU,CAAC,OAAO,CAAC;gBAC1C,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;aAC5B,CAAC,CAAC;YACH,IAAI,CAAC,UAAU;gBAAE,OAAO;SACzB;QAED,MAAM,SAAS,GAAG,MAAM,kBAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QACjE,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,MAAM,GAAG,GAAG,MAAM,aAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC/C,IAAI,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACrC,KAAK,GAAG,IAAI,CAAC;gBACb,MAAM;aACP;SACF;QACD,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,MAAM,YAAY,GAAG,MAAM,IAAA,+BAAe,EAAC,OAAO,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QAE5D,MAAM,QAAQ,GAAG,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;YAC/D,MAAM,gBAAgB,GAAG,MAAM,qBAAW,CAAC,OAAO,CAAC;gBACjD,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE;gBACnC,WAAW;aACZ,CAAC,CAAC;YACH,IAAI,gBAAgB,EAAE;gBACpB,IAAI,gBAAgB,CAAC,KAAK,KAAK,KAAK,IAAI,gBAAgB,CAAC,OAAO,KAAK,OAAO;oBAAE,OAAO;gBACrF,MAAM,MAAM,GAAG;oBACb,KAAK,EAAE,gBAAgB,CAAC,KAAK;oBAC7B,OAAO,EAAE,gBAAgB,CAAC,OAAO;oBACjC,SAAS,EAAE,gBAAgB,CAAC,SAAS;iBACtC,CAAC;gBACF,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC/B,gBAAgB,CAAC,OAAO,GAAG,OAAO,CAAC;gBACnC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;gBACvC,MAAM,gBAAgB,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC7C,MAAM,aAAa,CAAC,MAAM,CAAC;oBACzB,KAAK,EAAE,aAAa;oBACpB,MAAM,EAAE,mBAAmB;oBAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;oBACxB,UAAU,EAAE,gBAAgB,CAAC,EAAE;oBAC/B,SAAS,EAAE,OAAO;oBAClB,KAAK,EAAE,SAAS;oBAChB,MAAM;iBACP,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;gBACpB,OAAO,gBAAgB,CAAC;aACzB;YACD,MAAM,IAAI,GAAG,EAAE,EAAE,EAAE,IAAA,YAAM,GAAE,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;YACnF,MAAM,QAAQ,GAAG,MAAM,qBAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YACjE,MAAM,aAAa,CAAC,MAAM,CAAC;gBACzB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,gBAAgB;gBACxB,IAAI;gBACJ,UAAU,EAAE,QAAQ,CAAC,EAAE;gBACvB,KAAK,EAAE,SAAS;aACjB,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAA,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IAClB,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","file":"addCuration.js","sourcesContent":["import uuidv4 from 'uuid/v4';\nimport { Tag, EventTag, TagCurator, TagCuration, sequelize } from '@Models';\nimport * as AccessControlService from '@Services/AccessControlService';\nimport * as RecordService from '@Services/RecordService';\nimport { getLatestCommit } from '@Services/CommitService';\n\nasync function addCuration(tagId: number, curatorId: number, eventId: number, state: string, comment = '') {\n  const hasAccess = await AccessControlService.isAllowedToManageTag(curatorId, tagId);\n  if (!hasAccess) {\n    const tagCurator = await TagCurator.findOne({\n      where: { tagId, curatorId },\n    });\n    if (!tagCurator) return;\n  }\n\n  const eventTags = await EventTag.findAll({ where: { eventId } });\n  let found = false;\n  for (const eventTag of eventTags) {\n    const tag = await Tag.findByPk(eventTag.tagId);\n    if (tag.hierarchyPath.includes(tagId)) {\n      found = true;\n      break;\n    }\n  }\n  if (!found) return;\n\n  const latestCommit = await getLatestCommit(eventId);\n  const commitId = latestCommit ? latestCommit.id : undefined;\n\n  const curation = await sequelize.transaction(async transaction => {\n    const existingCuration = await TagCuration.findOne({\n      where: { tagId, eventId, commitId },\n      transaction,\n    });\n    if (existingCuration) {\n      if (existingCuration.state === state && existingCuration.comment === comment) return;\n      const before = {\n        state: existingCuration.state,\n        comment: existingCuration.comment,\n        curatorId: existingCuration.curatorId,\n      };\n      existingCuration.state = state;\n      existingCuration.comment = comment;\n      existingCuration.curatorId = curatorId;\n      await existingCuration.save({ transaction });\n      await RecordService.update({\n        model: 'tagCuration',\n        action: 'updateTagCuration',\n        data: { state, comment },\n        targetUUID: existingCuration.id,\n        subtarget: eventId,\n        owner: curatorId,\n        before,\n      }, { transaction });\n      return existingCuration;\n    }\n    const data = { id: uuidv4(), tagId, eventId, curatorId, state, comment, commitId };\n    const curation = await TagCuration.create(data, { transaction });\n    await RecordService.create({\n      model: 'tagCuration',\n      action: 'addTagCuration',\n      data,\n      targetUUID: curation.id,\n      owner: curatorId,\n    });\n    return curation;\n  });\n\n  return curation;\n}\n\nexport default addCuration;\n"],"sourceRoot":"../../../../src"}