{"version":3,"sources":["../api/services/EmailService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,uCAAyD;AAEzD,MAAM,WAAW,GAAG,gBAAW,CAAC,WAAW,CAAC;AAC5C,4CAAoB;AACpB,kDAA0B;AAE1B;;;GAGG;AACH,SAAe,SAAS,CAAC,KAAsB;;QAC7C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;gBAC3C,IAAI,GAAG;oBAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC5B,OAAO,CAAC,OAAO,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AAED,SAAsB,IAAI,CAAC,KAAsB;;QAC/C,IAAI,CAAC,WAAW;YAAE,OAAO;QACzB,IAAI,WAAW,CAAC,MAAM,EAAE,EAAE;YACxB,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;aAAM;YACL,MAAM,IAAA,eAAK,EAAC,GAAG,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;CAAA;AARD,oBAQC;AAED,SAAsB,QAAQ,CAAC,MAAc,EAAE,KAAa;;QAC1D,MAAM,KAAK,GAAG;YACZ,EAAE,EAAE,MAAM,CAAC,KAAK;YAChB,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,OAAO,EAAE,qBAAqB;aAC/B;YACD,QAAQ,EAAE,cAAc;YACxB,OAAO,EAAE,MAAM,CAAC,QAAQ,GAAG,YAAY;YACvC,OAAO,EAAE;gBACP,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,GAAG,EAAE,kBAAO,CAAC,IAAI,GAAG,UAAU;oBAC5B,YAAE,CAAC,SAAS,CAAC;wBACX,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC,EAAE;wBAClB,KAAK;qBACN,CAAC;aACL;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;CAAA;AApBD,4BAoBC;AAED,SAAsB,MAAM,CAAC,OAAe,EAAE,YAA0B,EAAE,QAAa;;QACrF,QAAQ,CAAC,WAAW,GAAG,GAAG,kBAAO,CAAC,GAAG,4BAA4B;YAC/D,MAAO,YAAY,CAAC,EAAG,EAAE;YACzB,kBAAmB,YAAY,CAAC,aAAc,EAAE,CAAC;QAEnD,MAAM,KAAK,GAAG;YACZ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,OAAO,EAAE,qBAAqB;aAC/B;YACD,EAAE,EAAE,OAAO;YACX,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,QAAQ,EAAE,cAAc;YACxB,OAAO,EAAE,QAAQ;SAClB,CAAC;QAEF,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;CAAA;AAjBD,wBAiBC","file":"EmailService.js","sourcesContent":["import { SendMailOptions } from 'nodemailer';\nimport { Client, Subscription } from '@Models';\nimport { email as emailConfig, globals } from '@Configs';\n\nconst transporter = emailConfig.transporter;\nimport qs from 'qs';\nimport delay from 'delay';\n\n/**\n * wrapper for transporter.sendMail\n * @param {string} email\n */\nasync function sendEmail(email: SendMailOptions) {\n  return new Promise((resolve, reject) => {\n    transporter.sendMail(email, (err, message) => {\n      if (err) return reject(err);\n      resolve(message);\n    });\n  });\n}\n\nexport async function send(email: SendMailOptions): Promise<any> {\n  if (!transporter) return;\n  if (transporter.isIdle()) {\n    return sendEmail(email);\n  } else {\n    await delay(500);\n    return send(email);\n  }\n}\n\nexport async function register(client: Client, token: string) {\n  const email = {\n    to: client.email,\n    from: {\n      name: '浪潮 V2Land',\n      address: 'verify@langchao.org',\n    },\n    template: 'registration',\n    subject: client.username + '，请完成浪潮注册过程',\n    context: {\n      username: client.username,\n      url: globals.site + '/verify?' +\n        qs.stringify({\n          id: '' + client.id,\n          token,\n        }),\n    },\n  };\n\n  return send(email);\n}\n\nexport async function notify(address: string, subscription: Subscription, template: any) {\n  template.unsubscribe = `${globals.api}/subscription/unsubscribe?` +\n    `id=${ subscription.id }` +\n    `&unsubscribeId=${ subscription.unsubscribeId }`;\n\n  const email = {\n    from: {\n      name: '浪潮 V2Land',\n      address: 'notify@langchao.org',\n    },\n    to: address,\n    subject: template.subject,\n    template: 'notification',\n    context: template,\n  };\n\n  return send(email);\n}\n"],"sourceRoot":"../../../src"}