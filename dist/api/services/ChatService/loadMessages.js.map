{"version":3,"sources":["../api/services/ChatService/loadMessages.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAiD;AACjD,mCAAoC;AAEpC,MAAM,EAAE,EAAE,EAAE,GAAG,mBAAS,CAAC;AAMlB,MAAM,YAAY,GAAG,CAAO,IAA2B,EAAE,GAAsB,EAAE,EACtF,MAAM,MACiB,EAAE,EAAE,EAAE;IAC7B,MAAM,MAAM,GAAG,IAAA,iBAAS,EAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACpC,MAAM,KAAK,GAA2B,EAAE,MAAM,EAAE,CAAC;IACjD,IAAI,MAAM,EAAE;QACV,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC;KACxC;IAED,MAAM,QAAQ,GAAG,MAAM,qBAAW,CAAC,OAAO,CAAC;QACzC,KAAK;QACL,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAC9B,KAAK,EAAE,EAAE;KACV,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAA,CAAC;AAhBW,QAAA,YAAY,gBAgBvB","file":"loadMessages.js","sourcesContent":["import { ChatMessage, Sequelize } from '@Models';\nimport { getChatId } from './utils';\n\nconst { Op } = Sequelize;\n\ntype LoadMessagesOptions = {\n  before?: Date;\n}\n\nexport const loadMessages = async (type: 'client' | 'newsroom', ids: number | number[], {\n  before,\n}: LoadMessagesOptions = {}) => {\n  const chatId = getChatId(type, ids);\n  const where: Sequelize.WhereOptions = { chatId };\n  if (before) {\n    where.createdAt = { [Op.lte]: before };\n  }\n\n  const messages = await ChatMessage.findAll({\n    where,\n    order: [['createdAt', 'DESC']],\n    limit: 30,\n  });\n\n  return messages;\n};\n"],"sourceRoot":"../../../../src"}