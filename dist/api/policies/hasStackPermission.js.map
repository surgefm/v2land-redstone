{"version":3,"sources":["../api/policies/hasStackPermission.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yCAAiD;AACjD,qCAAgC;AAEhC,MAAM,kBAAkB,GAAG,CAAC,MAAc,EAAE,YAAqB,EAAE,EAAE,CAAC,CAAO,GAAoB,EAAE,GAAqB,EAAE,IAAkB,EAAE,EAAE;IAC9I,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;IACpC,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;KACJ;IAED,MAAM,QAAQ,GAAG,gCAAoB,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACxE,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAChG,IAAI,UAAU;QAAE,OAAO,IAAI,EAAE,CAAC;IAE9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,YAAY,IAAI,SAAS;KACnC,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAEF,kBAAe,kBAAkB,CAAC","file":"hasStackPermission.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse, NextFunction } from '@Types';\nimport { AccessControlService } from '@Services';\nimport { Stack } from '@Models';\n\nconst hasStackPermission = (action: string, errorMessage?: string) => async (req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) => {\n  const stackId = +req.params.stackId;\n  const stack = await Stack.findByPk(stackId);\n  if (!stack) {\n    return res.status(404).json({\n      message: '未找到该进展',\n    });\n  }\n\n  const resource = AccessControlService.getEventResourceId(stack.eventId);\n  const haveAccess = await AccessControlService.isAllowed(req.session.clientId, resource, action);\n  if (haveAccess) return next();\n\n  return res.status(403).json({\n    message: errorMessage || '用户没有该权限',\n  });\n};\n\nexport default hasStackPermission;\n"],"sourceRoot":"../../../src"}