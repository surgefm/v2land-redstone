{"version":3,"sources":["../api/policies/hasTagPermission.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yCAAiD;AAEjD,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,YAAqB,EAAE,EAAE,CAAC,CAAO,GAAoB,EAAE,GAAqB,EAAE,IAAkB,EAAE,EAAE;IAC5I,IAAI,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;QAAE,OAAO,IAAI,EAAE,CAAC;IAClG,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;IAChC,MAAM,QAAQ,GAAG,gCAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC9D,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAChG,IAAI,UAAU;QAAE,OAAO,IAAI,EAAE,CAAC;IAE9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,YAAY,IAAI,SAAS;KACnC,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAEF,kBAAe,gBAAgB,CAAC","file":"hasTagPermission.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse, NextFunction } from '@Types';\nimport { AccessControlService } from '@Services';\n\nconst hasTagPermission = (action: string, errorMessage?: string) => async (req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) => {\n  if (await AccessControlService.isAllowed(req.session.clientId, 'all-tags', action)) return next();\n  const tagId = +req.params.tagId;\n  const resource = AccessControlService.getTagResourceId(tagId);\n  const haveAccess = await AccessControlService.isAllowed(req.session.clientId, resource, action);\n  if (haveAccess) return next();\n\n  return res.status(403).json({\n    message: errorMessage || '用户没有该权限',\n  });\n};\n\nexport default hasTagPermission;\n"],"sourceRoot":"../../../src"}