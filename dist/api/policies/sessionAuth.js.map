{"version":3,"sources":["../api/policies/sessionAuth.ts"],"names":[],"mappings":";;AAUA,mBAAwB,GAAoB,EAAE,GAAqB,EAAE,IAAkB;IACrF,+CAA+C;IAC/C,gDAAgD;IAChD,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE;QAC7B,OAAO,IAAI,EAAE,CAAC;KACf;IAED,sBAAsB;IACtB,0EAA0E;IAC1E,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+CAA+C,EAAE,CAAC,CAAC;AAC5F,CAAC;AAVD,4BAUC","file":"sessionAuth.js","sourcesContent":["/**\n * sessionAuth\n *\n * @module      :: Policy\n * @description :: Simple policy to allow any authenticated user\n *                 Assumes that your login action in one of your controllers sets `req.session.authenticated = true;`\n *\n */\nimport { RedstoneRequest, RedstoneResponse, NextFunction } from '@Types';\n\nexport default function(req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) {\n  // User is allowed, proceed to the next policy,\n  // or if this is the last policy, the controller\n  if (req.session.authenticated) {\n    return next();\n  }\n\n  // User is not allowed\n  // (default res.forbidden() behavior can be overridden in `config/403.js`)\n  return res.status(403).json({ message: 'You are not permitted to perform this action.' });\n}\n"],"sourceRoot":"../../../src"}