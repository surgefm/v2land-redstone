{"version":3,"sources":["../api/policies/hasEventPermission.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yCAA+D;AAE/D,MAAM,kBAAkB,GAAG,CAAC,MAAc,EAAE,YAAqB,EAAE,EAAE,CAAC,CAAO,GAAoB,EAAE,GAAqB,EAAE,IAAkB,EAAE,EAAE;IAC9I,IAAI,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,CAAC;QAAE,OAAO,IAAI,EAAE,CAAC;IACpG,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IAClC,MAAM,OAAO,GAAG,MAAM,wBAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,MAAM,wBAAY,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IACzE,IAAI,KAAK,CAAC,MAAM,KAAK,UAAU,EAAE;QAC/B,MAAM,SAAS,GAAG,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,qBAAqB,EAAE,MAAM,CAAC,CAAC;QAC5G,IAAI,SAAS;YAAE,OAAO,IAAI,EAAE,CAAC;KAC9B;IACD,MAAM,QAAQ,GAAG,gCAAoB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAClE,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAChG,IAAI,UAAU;QAAE,OAAO,IAAI,EAAE,CAAC;IAE9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,YAAY,IAAI,SAAS;KACnC,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAEF,kBAAe,kBAAkB,CAAC","file":"hasEventPermission.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse, NextFunction } from '@Types';\nimport { AccessControlService, EventService } from '@Services';\n\nconst hasEventPermission = (action: string, errorMessage?: string) => async (req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) => {\n  if (await AccessControlService.isAllowed(req.session.clientId, 'all-events', action)) return next();\n  const name = req.params.eventName;\n  const eventId = await EventService.getEventId(name);\n  const event = await EventService.findEvent(eventId, { eventOnly: true });\n  if (event.status === 'admitted') {\n    const permitted = await AccessControlService.isAllowed(req.session.clientId, 'all-admitted-events', action);\n    if (permitted) return next();\n  }\n  const resource = AccessControlService.getEventResourceId(eventId);\n  const haveAccess = await AccessControlService.isAllowed(req.session.clientId, resource, action);\n  if (haveAccess) return next();\n\n  return res.status(403).json({\n    message: errorMessage || '用户没有该权限',\n  });\n};\n\nexport default hasEventPermission;\n"],"sourceRoot":"../../../src"}