{"version":3,"sources":["../api/controllers/RoleController/checkPermissionOnResource.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAiD;AAGjD,SAA8B,yBAAyB,CAAC,GAAoB,EAAE,GAAqB;;QACjG,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QACzC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;QACjC,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QACtF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9C,CAAC;CAAA;AAND,4CAMC","file":"checkPermissionOnResource.js","sourcesContent":["import { AccessControlService } from '@Services';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\n\nexport default async function checkPermissionOnResource(req: RedstoneRequest, res: RedstoneResponse) {\n  const clientId = parseInt(req.params.clientId);\n  const resourceId = req.params.resourceId;\n  const action = req.params.action;\n  const haveAccess = await AccessControlService.isAllowed(clientId, resourceId, action);\n  return res.status(200).json({ haveAccess });\n}\n"],"sourceRoot":"../../../../src"}