{"version":3,"sources":["../api/controllers/ClientController/findClient.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yCAAgE;AAEhE,SAAe,UAAU,CAAC,GAAoB,EAAE,GAAqB;;QACnE,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QACnC,MAAM,QAAQ,GAAG,MAAM,yBAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,yBAAa,CAAC,UAAU,CAAC,QAAQ,EAAE;YACjE,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,IAAI;YACf,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEV,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QAED,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC,EAAE,EAAE;YACtC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,yBAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACrF;aAAM,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC/B,IAAI,MAAM,gCAAoB,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAClE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,yBAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;aACrF;SACF;QAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,MAAM,EAAE,yBAAa,CAAC,cAAc,CAAC,MAAM,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,UAAU,CAAC","file":"findClient.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { ClientService, AccessControlService } from '@Services';\n\nasync function findClient(req: RedstoneRequest, res: RedstoneResponse) {\n  const name = req.params.clientName;\n  const clientId = await ClientService.getClientId(name);\n  const client = clientId ? await ClientService.findClient(clientId, {\n    withEvents: true,\n    withStars: true,\n    withCuratorRoles: true,\n  }) : null;\n\n  if (!client) {\n    return res.status(404).json({\n      message: '未找到该用户',\n    });\n  }\n\n  if (req.session.clientId === client.id) {\n    return res.status(200).json({ client: ClientService.sanitizeClient(client, true) });\n  } else if (req.session.clientId) {\n    if (await AccessControlService.isClientAdmin(req.session.clientId)) {\n      return res.status(200).json({ client: ClientService.sanitizeClient(client, true) });\n    }\n  }\n\n  return res.status(200).json({\n    client: ClientService.sanitizeClient(client),\n  });\n}\n\nexport default findClient;\n"],"sourceRoot":"../../../../src"}