{"version":3,"sources":["../api/controllers/ClientController/updateSettings.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAA4C;AAC5C,yCAA0C;AAE1C,SAAe,cAAc,CAAC,GAAoB,EAAE,GAAqB;;QACvE,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAC9B,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QACnC,MAAM,yBAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;YAC9C,MAAM,MAAM,GAAG,MAAM,yBAAa,CAAC,UAAU,CAAC,IAAI,EAAE;gBAClD,SAAS,EAAE,KAAK;gBAChB,iBAAiB,EAAE,KAAK;gBACxB,WAAW;aACZ,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,EAAE;gBACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC1B,OAAO,EAAE,QAAQ;iBAClB,CAAC,CAAC;aACJ;YAED,MAAM,CAAC,QAAQ,mCACV,MAAM,CAAC,QAAQ,GACf,QAAQ,CACZ,CAAC;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;YACnC,MAAM,gBAAM,CAAC,MAAM,CAAC;gBAClB,SAAS,EAAE,QAAQ;gBACnB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,EAAE,QAAQ,EAAE;gBAClB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC5B,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC5B,MAAM,EAAE,sBAAsB;aAC/B,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YAEpB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,UAAU;aACpB,CAAC,CAAC;QACL,CAAC,CAAA,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,cAAc,CAAC","file":"updateSettings.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { Record, sequelize } from '@Models';\nimport { ClientService } from '@Services';\n\nasync function updateSettings(req: RedstoneRequest, res: RedstoneResponse) {\n  if (!req.body || !req.body.settings) {\n    return res.status(400).json({\n      message: '缺少修改信息',\n    });\n  }\n\n  const { settings } = req.body;\n  const name = req.params.clientName;\n  await ClientService.validateSettings(settings);\n  await sequelize.transaction(async transaction => {\n    const client = await ClientService.findClient(name, {\n      withAuths: false,\n      withSubscriptions: false,\n      transaction,\n    });\n\n    if (!client) {\n      return res.status(404).json({\n        message: '未找到该用户',\n      });\n    }\n\n    client.settings = {\n      ...client.settings,\n      ...settings,\n    };\n\n    await client.save({ transaction });\n    await Record.create({\n      operation: 'update',\n      model: 'Client',\n      data: { settings },\n      client: req.session.clientId,\n      target: req.session.clientId,\n      action: 'updateClientSettings',\n    }, { transaction });\n\n    res.status(201).json({\n      message: '成功更新用户设置',\n    });\n  });\n}\n\nexport default updateSettings;\n"],"sourceRoot":"../../../../src"}