{"version":3,"sources":["../api/controllers/ClientController/updateClient.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAAoC;AACpC,yCAAuE;AAEvE,SAAe,YAAY,CAAC,GAAoB,EAAE,GAAqB;;QACrE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;YACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QAED,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QACnC,IAAI,MAAM,GAAG,MAAM,yBAAa,CAAC,UAAU,CAAC,IAAI,EAAE;YAChD,SAAS,EAAE,KAAK;YAChB,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QACD,uEAAuE;QACvE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,IAAI,GAAG,CAAC,aAAa,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;YAChF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC;SACJ;QAED,MAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,KAAK,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,EAAE;YACjE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAM,MAAc,CAAC,CAAC,CAAC,EAAE;gBACrD,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1B;SACF;QAED,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;YAC9C,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/C,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACpB,MAAM,wBAAY,CAAC,GAAG,CAAC,wBAAY,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;aACtE;YACD,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YAC9C,MAAM,yBAAa,CAAC,MAAM,CAAC;gBACzB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC3B,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,MAAM,CAAC,EAAE;gBACjB,MAAM,EAAE,oBAAoB;aAC7B,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QACtB,CAAC,CAAA,CAAC,CAAC;QAEH,MAAM,GAAG,GAAG,CAAC,aAAa,GAAG,MAAM,yBAAa,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACvE,MAAM,wBAAY,CAAC,GAAG,CAAC,wBAAY,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QAEhF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,MAAM;YACf,MAAM;SACP,CAAC,CAAC;QAEH,yBAAa,CAAC,kBAAkB,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5D,CAAC;CAAA;AAED,kBAAe,YAAY,CAAC","file":"updateClient.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { sequelize } from '@Models';\nimport { ClientService, RecordService, RedisService } from '@Services';\n\nasync function updateClient(req: RedstoneRequest, res: RedstoneResponse) {\n  if (!req.body) {\n    return res.status(400).json({\n      message: '缺少修改信息',\n    });\n  }\n\n  const name = req.params.clientName;\n  let client = await ClientService.findClient(name, {\n    withAuths: false,\n    withSubscriptions: false,\n  });\n  if (!client) {\n    return res.status(404).json({\n      message: '未找到该用户',\n    });\n  }\n  // if the client is not Admin, he is not allowed to update other client\n  if (!req.currentClient.isAdmin && req.currentClient.username !== client.username) {\n    return res.status(403).json({\n      message: '您没有权限进行该操作',\n    });\n  }\n\n  const changes: any = {};\n  for (const i of ['nickname', 'avatar', 'description', 'username']) {\n    if (req.body[i] && req.body[i] !== (client as any)[i]) {\n      changes[i] = req.body[i];\n    }\n  }\n\n  await sequelize.transaction(async transaction => {\n    const origClient = client.get({ plain: true });\n    if (changes.username) {\n      await RedisService.del(RedisService.getClientIdKey(client.username));\n    }\n    await client.update(changes, { transaction });\n    await RecordService.update({\n      data: changes,\n      owner: req.session.clientId,\n      model: 'Client',\n      before: origClient,\n      target: client.id,\n      action: 'updateClientDetail',\n    }, { transaction });\n  });\n\n  client = req.currentClient = await ClientService.findClient(client.id);\n  await RedisService.set(RedisService.getClientIdKey(client.username), client.id);\n\n  res.status(201).json({\n    message: '修改成功',\n    client,\n  });\n\n  ClientService.updateAlgoliaIndex({ clientId: client.id });\n}\n\nexport default updateClient;\n"],"sourceRoot":"../../../../src"}