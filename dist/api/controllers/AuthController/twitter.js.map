{"version":3,"sources":["../api/controllers/AuthController/twitter.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA+B;AAC/B,uCAAiC;AAGjC,SAAe,OAAO,CAAC,GAAoB,EAAE,GAAqB;;QAChE,MAAM,EAAE,GAAG,gBAAK,CAAC,OAAO,CAAC;QAEzB,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,iBAAiB;aAC3B,CAAC,CAAC;SACJ;QAED,MAAM,QAAQ,GAAG,GAAoD,EAAE;YACrE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrC,EAAE,CAAC,oBAAoB,CAAC,CAAC,GAAQ,EAAE,KAAa,EAAE,WAAmB,EAAE,EAAE;oBACvE,IAAI,GAAG;wBAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC5B,OAAO,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,QAAQ,EAAE,CAAC;YAChD,MAAM,cAAI,CAAC,MAAM,CAAC;gBAChB,IAAI,EAAE,SAAS;gBACf,KAAK;gBACL,WAAW;gBACX,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC7C,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;aAClD,CAAC,CAAC;YAEH,IAAI,QAAQ,GAAG,qDAAqD,CAAC;YACrE,QAAQ,IAAI,KAAK,CAAC;YAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAC7B;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,sBAAsB;aAChC,CAAC,CAAC;SACJ;IACH,CAAC;CAAA;AAED,kBAAe,OAAO,CAAC","file":"twitter.js","sourcesContent":["import { Auth } from '@Models';\nimport { oauth } from '@Configs';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\n\nasync function twitter(req: RedstoneRequest, res: RedstoneResponse) {\n  const oa = oauth.twitter;\n\n  if (!oa) {\n    return res.status(503).json({\n      message: '暂不支持 Twitter 绑定',\n    });\n  }\n\n  const getToken = (): Promise<{ token: string; tokenSecret: string }> => {\n    return new Promise((resolve, reject) => {\n      oa.getOAuthRequestToken((err: any, token: string, tokenSecret: string) => {\n        if (err) return reject(err);\n        resolve({ token, tokenSecret });\n      });\n    });\n  };\n\n  try {\n    const { token, tokenSecret } = await getToken();\n    await Auth.create({\n      site: 'twitter',\n      token,\n      tokenSecret,\n      owner: req.session.clientId,\n      redirect: req.query ? req.query.redirect : '',\n      inviteCode: req.query ? req.query.inviteCode : '',\n    });\n\n    let redirect = 'https://twitter.com/oauth/authenticate?oauth_token=';\n    redirect += token;\n    res.redirect(307, redirect);\n  } catch (e) {\n    console.error(e);\n    return res.status(503).json({\n      message: 'Twitter 绑定错误，请与开发者联系',\n    });\n  }\n}\n\nexport default twitter;\n"],"sourceRoot":"../../../../src"}