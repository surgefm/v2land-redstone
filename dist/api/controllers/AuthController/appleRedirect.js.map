{"version":3,"sources":["../api/controllers/AuthController/appleRedirect.ts"],"names":[],"mappings":"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","file":"appleRedirect.js","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable camelcase */\nimport { Auth } from '@Models';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { RecordService, AuthService, ClientService } from '@Services';\nimport appleSignin from 'apple-signin-auth';\n\nasync function appleRedirect(req: RedstoneRequest, res: RedstoneResponse) {\n  const { APPLE_CLIENT_ID } = process.env;\n\n  if (!APPLE_CLIENT_ID) {\n    return res.status(503).json({\n      message: '暂不支持 Apple 登录',\n    });\n  }\n\n  if (!(req.query && req.query.res)) {\n    return res.status(400).json({\n      message: '请求缺少 res',\n    });\n  }\n\n  const r = JSON.parse(decodeURIComponent(req.query.res as string));\n  const { authorization, user } = r;\n  const { id_token } = authorization;\n  const { name } = user || {};\n\n  let id: string;\n  let email: string;\n  try {\n    const { sub, email: e } = await appleSignin.verifyIdToken(id_token, {\n      audience: APPLE_CLIENT_ID,\n    });\n    id = sub;\n    email = e;\n  } catch (err) {\n    return res.status(403).json({\n      message: '无法验证用户',\n    });\n  }\n\n  const existingAuth = await Auth.findOne({\n    where: {\n      profileId: `${id}`,\n      site: 'apple',\n    },\n  });\n\n  if (existingAuth) {\n    existingAuth.profile = r;\n    if (existingAuth.owner) {\n      await existingAuth.save();\n      req.session.clientId = existingAuth.owner;\n      return res.status(200).json(AuthService.sanitize(existingAuth));\n    } else if (req.session.clientId) {\n      existingAuth.owner = req.body.clientId;\n      await existingAuth.save();\n      await RecordService.create({\n        model: 'auth',\n        action: 'authorizeThirdPartyAccount',\n        owner: req.session.clientId,\n        target: existingAuth.id,\n      });\n      return res.status(201).json(AuthService.sanitize(existingAuth));\n    }\n  }\n\n  const username = name ? user.firstName + name.lastName : id;\n  const clientUsername = await ClientService.randomlyGenerateUsername(username);\n  let nickname = (name ? `${name.firstName} ${name.lastName}` : id).slice(0, 16).trim();\n  if (nickname.length < 2) {\n    nickname = id.slice(0, 16).trim();\n  }\n\n  const newClient = await ClientService.createClient({\n    username: clientUsername,\n    nickname,\n    inviteCode: (req.query.inviteCode as string) || '',\n    email,\n    emailVerified: true,\n  });\n\n  const auth = existingAuth || await Auth.create({\n    site: 'apple',\n    profileId: `${id}`,\n    profile: r,\n  });\n\n  auth.owner = newClient.id;\n  await auth.save();\n\n  req.session.clientId = newClient.id;\n\n  return res.status(201).json({\n    message: '注册成功',\n    auth: AuthService.sanitize(auth),\n    client: newClient,\n  });\n}\n\nexport default appleRedirect;\n"],"sourceRoot":"../../../../src"}