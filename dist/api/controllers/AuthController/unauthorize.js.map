{"version":3,"sources":["../api/controllers/AuthController/unauthorize.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA0C;AAC1C,yCAA0C;AAG1C,SAAe,WAAW,CAAE,GAAoB,EAAE,GAAqB;;QACrE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;SACJ;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,UAAU;aACpB,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE;YACvC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,UAAU;aACpB,CAAC,CAAC;SACJ;QAED,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;YAC9C,MAAM,cAAI,CAAC,OAAO,CAAC;gBACjB,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;gBACtB,WAAW;aACZ,CAAC,CAAC;YAEH,MAAM,yBAAa,CAAC,OAAO,CAAC;gBAC1B,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC3B,MAAM,EAAE,8BAA8B;aACvC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QACtB,CAAC,CAAA,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","file":"unauthorize.js","sourcesContent":["import { Auth, sequelize } from '@Models';\nimport { RecordService } from '@Services';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\n\nasync function unauthorize (req: RedstoneRequest, res: RedstoneResponse) {\n  if (!req.params.authId) {\n    return res.status(400).json({\n      message: '缺少参数：authId',\n    });\n  }\n\n  const auth = await Auth.findByPk(req.params.authId);\n  if (!auth) {\n    return res.status(404).json({\n      message: '未找到该绑定信息',\n    });\n  }\n\n  if (auth.owner !== req.session.clientId) {\n    return res.status(403).json({\n      message: '你无权进行该解绑',\n    });\n  }\n\n  await sequelize.transaction(async transaction => {\n    await Auth.destroy({\n      where: { id: auth.id },\n      transaction,\n    });\n\n    await RecordService.destroy({\n      model: 'auth',\n      target: auth.id,\n      owner: req.session.clientId,\n      action: 'unauthorizeThirdPartyAccount',\n    }, { transaction });\n  });\n\n  res.status(201).json({\n    message: '成功解除绑定',\n  });\n}\n\nexport default unauthorize;\n"],"sourceRoot":"../../../../src"}