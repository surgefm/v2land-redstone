{"version":3,"sources":["../api/controllers/SubscriptionController/removeContact.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAA6C;AAC7C,yCAA0C;AAE1C,SAAe,aAAa,CAAE,GAAoB,EAAE,GAAqB;;QACvE,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;YAC3D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,0BAA0B;aACpC,CAAC,CAAC;SACJ;QAED,MAAM,OAAO,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC;YACpC,KAAK,EAAE,GAAG,CAAC,KAAK;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QAED,IAAI,OAAO,CAAC,aAAa,KAAK,GAAG,CAAC,KAAK,CAAC,aAAa,EAAE;YACrD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;SACJ;QAED,MAAM,mBAAS,CAAC,WAAW,CAAC,CAAM,WAAW,EAAC,EAAE;YAC9C,MAAM,iBAAO,CAAC,MAAM,CAAC;gBACnB,MAAM,EAAE,UAAU;aACnB,EAAE;gBACD,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE;gBACzB,WAAW;aACZ,CAAC,CAAC;YAEH,MAAM,yBAAa,CAAC,MAAM,CAAC;gBACzB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,2BAA2B;gBACnC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;gBAC3B,MAAM,EAAE,OAAO,CAAC,KAAK;gBACrB,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;gBAC5B,MAAM,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;aACnC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QACtB,CAAC,CAAA,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,IAAI,EAAE,qBAAqB;YAC3B,OAAO,EAAE,SAAS;SACnB,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,aAAa,CAAC","file":"removeContact.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { Contact, sequelize } from '@Models';\nimport { RecordService } from '@Services';\n\nasync function removeContact (req: RedstoneRequest, res: RedstoneResponse) {\n  if (!(req.query && req.query.id && req.query.unsubscribeId)) {\n    return res.status(400).json({\n      message: '缺少 id 或 unsubscribeId 参数',\n    });\n  }\n\n  const contact = await Contact.findOne({\n    where: req.query,\n  });\n\n  if (!contact) {\n    return res.status(404).json({\n      message: '未找到该关注',\n    });\n  }\n\n  if (contact.unsubscribeId !== req.query.unsubscribeId) {\n    return res.status(400).json({\n      message: '错误的解绑代码',\n    });\n  }\n\n  await sequelize.transaction(async transaction => {\n    await Contact.update({\n      status: 'inactive',\n    }, {\n      where: { id: contact.id },\n      transaction,\n    });\n\n    await RecordService.update({\n      model: 'Contact',\n      action: 'removeSubscriptionContact',\n      owner: req.session.clientId,\n      target: contact.owner,\n      data: { status: 'inactive' },\n      before: { status: contact.status },\n    }, { transaction });\n  });\n\n  res.status(201).json({\n    name: 'Remove successfully',\n    message: '成功取消关注。',\n  });\n}\n\nexport default removeContact;\n"],"sourceRoot":"../../../../src"}