{"version":3,"sources":["../api/controllers/EventController/getPendingNews.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAAgC;AAChC,yCAAyC;AAEzC,SAAe,cAAc,CAAC,GAAoB,EAAE,GAAqB;;QACvE,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,KAAK,GAAqB,MAAM,wBAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEjE,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC;SACJ;QAED,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACvC,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YAC9C,KAAK,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE;SAC7B,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IAClD,CAAC;CAAA;AAED,kBAAe,cAAc,CAAC","file":"getPendingNews.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse, EventObj } from '@Types';\nimport { Event } from '@Models';\nimport { EventService } from '@Services';\n\nasync function getPendingNews(req: RedstoneRequest, res: RedstoneResponse) {\n  const name = req.params.eventName;\n  let event: EventObj | Event = await EventService.findEvent(name);\n\n  if (!event) {\n    return res.status(404).json({\n      message: '未找到该事件',\n    });\n  }\n\n  event = await Event.findByPk(event.id);\n  const newsCollection = await event.$get('news', {\n    where: { status: 'pending' },\n  });\n\n  return res.status(200).json({ newsCollection });\n}\n\nexport default getPendingNews;\n"],"sourceRoot":"../../../../src"}