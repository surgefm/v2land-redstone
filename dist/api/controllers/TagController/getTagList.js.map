{"version":3,"sources":["../api/controllers/TagController/getTagList.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA6C;AAE7C,yCAA6E;AAE7E,SAAe,UAAU,CAAC,GAAoB,EAAE,GAAqB;;QACnE,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;QACtD,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACzB,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;aAC1B;iBAAM;gBACL,MAAM,QAAQ,GAAG,MAAM,gCAAoB,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACjF,IAAI,CAAC,QAAQ,EAAE;oBACb,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;iBAC1B;aACF;SACF;QAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,aAAG,CAAC,eAAe,CAAC;YAChD,KAAK,EAAE,uBAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC3C,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,eAAK;oBACZ,EAAE,EAAE,QAAQ;oBACZ,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;oBAC7B,OAAO,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;iBAC5B,EAAE;oBACD,KAAK,EAAE,gBAAM;oBACb,EAAE,EAAE,UAAU;oBACd,OAAO,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;oBAC3B,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE,yBAAa,CAAC,eAAe;iBAC1C,CAAC;YACF,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC9B,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE;SAC1D,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC;CAAA;AAED,kBAAe,UAAU,CAAC","file":"getTagList.js","sourcesContent":["import { Tag, Event, Client } from '@Models';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { UtilService, AccessControlService, ClientService } from '@Services';\n\nasync function getTagList(req: RedstoneRequest, res: RedstoneResponse) {\n  const where = req.body.where || { status: 'visible' };\n  if (where.status !== 'visible') {\n    if (!req.session.clientId) {\n      where.status = 'visible';\n    } else {\n      const isEditor = await AccessControlService.isClientEditor(req.session.clientId);\n      if (!isEditor) {\n        where.status = 'visible';\n      }\n    }\n  }\n\n  const { rows, count } = await Tag.findAndCountAll({\n    where: UtilService.convertWhereQuery(where),\n    include: [{\n      model: Event,\n      as: 'events',\n      where: { status: 'admitted' },\n      through: { attributes: [] },\n    }, {\n      model: Client,\n      as: 'curators',\n      through: { attributes: [] },\n      required: false,\n      attributes: ClientService.sanitizedFields,\n    }],\n    order: [['updatedAt', 'DESC']],\n    limit: 15,\n    offset: 15 * (+req.query.page || req.body.page || 1) - 15,\n  });\n\n  res.status(200).json({ tags: rows, count });\n}\n\nexport default getTagList;\n"],"sourceRoot":"../../../../src"}