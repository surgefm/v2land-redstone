{"version":3,"sources":["../api/controllers/StackController/getStackList.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAAsC;AACtC,yCAA4E;AAE5E,SAAe,YAAY,CAAC,GAAoB,EAAE,GAAqB;;QACrE,IAAI,KAAK,CAAC;QACV,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9B,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;SACxB;QAED,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE;YACjC,IAAI,MAAM,gCAAoB,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACnE,SAAS,GAAG,IAAI,CAAC;aAClB;SACF;QAED,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;YACvB,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;SAC3B;QAED,IAAI,KAAK,EAAE;YACT,KAAK,GAAG,uBAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC9C;QAED,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;YACjC,KAAK,EAAE,KAAK,IAAI;gBACd,MAAM,EAAE,UAAU;aACnB;YACD,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,cAAI;oBACX,EAAE,EAAE,MAAM;oBACV,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;oBAC7B,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBACxB,OAAO,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;oBAC3B,QAAQ,EAAE,KAAK;iBAChB,CAAC;YACF,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,MAAM,SAAS,GAAU,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,CAAO,CAAS,EAAE,EAAE;YACpC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,QAAQ,GAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;gBACjF,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACpC;YACD,QAAQ,CAAC,SAAS,GAAG,MAAM,cAAI,CAAC,KAAK,CAAC;gBACpC,KAAK,EAAE;oBACL,MAAM,EAAE,UAAU;oBAClB,OAAO,EAAE,KAAK,CAAC,EAAE;iBAClB;aACF,CAAC,CAAC;YACH,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC1B,CAAC,CAAA,CAAC;QAEF,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEzB,MAAM,wBAAY,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC;QAE9D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,YAAY,CAAC","file":"getStackList.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { News, Stack } from '@Models';\nimport { UtilService, StackService, AccessControlService } from '@Services';\n\nasync function getStackList(req: RedstoneRequest, res: RedstoneResponse) {\n  let where;\n  let isManager = false;\n\n  if (req.body && req.body.where) {\n    where = req.body.where;\n  }\n\n  if (where && req.session.clientId) {\n    if (await AccessControlService.isClientEditor(req.session.clientId)) {\n      isManager = true;\n    }\n  }\n\n  if (where && !isManager) {\n    where.status = 'admitted';\n  }\n\n  if (where) {\n    where = UtilService.convertWhereQuery(where);\n  }\n\n  const stacks = await Stack.findAll({\n    where: where || {\n      status: 'admitted',\n    },\n    include: [{\n      model: News,\n      as: 'news',\n      where: { status: 'admitted' },\n      order: [['time', 'ASC']],\n      through: { attributes: [] },\n      required: false,\n    }],\n    order: [['updatedAt', 'DESC']],\n  });\n\n  const stackObjs: any[] = stacks.map(() => null);\n  const getDetail = async (i: number) => {\n    const stack = stacks[i];\n    const stackObj: any = stack.get({ plain: true });\n    if (!stack.time && stack.status === 'admitted' && stack.news && stack.news.length) {\n      stackObj.time = stack.news[0].time;\n    }\n    stackObj.newsCount = await News.count({\n      where: {\n        status: 'admitted',\n        stackId: stack.id,\n      },\n    });\n    stackObjs[i] = stackObj;\n  };\n\n  const queue = [];\n  for (let i = 0; i < stacks.length; i++) {\n    queue.push(getDetail(i));\n  }\n  await Promise.all(queue);\n\n  await StackService.acquireContributionsByStackList(stackObjs);\n\n  res.status(200).json({\n    stackList: stackObjs,\n  });\n}\n\nexport default getStackList;\n"],"sourceRoot":"../../../../src"}