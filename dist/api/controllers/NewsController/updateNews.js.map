{"version":3,"sources":["../api/controllers/NewsController/updateNews.ts"],"names":[],"mappings":"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","file":"updateNews.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { News, sequelize } from '@Models';\nimport { RecordService, EventService, NotificationService, NewsService } from '@Services';\n// import urlTrimmer = require('v2land-url-trimmer');\n\nasync function updateNews(req: RedstoneRequest, res: RedstoneResponse) {\n  const id = +req.params.news;\n  const data = req.body;\n\n  let news = await News.findByPk(id);\n\n  if (!news) {\n    return res.status(404).json({\n      message: '未找到该新闻',\n    });\n  }\n\n  // if (data.url) {\n  //   data.url = (await urlTrimmer.trim(data.url)).toString();\n  // }\n\n  const changes: any = {};\n  for (const i of ['url', 'source', 'title', 'abstract', 'time', 'status', 'comment', 'stackId', 'isInTemporaryStack']) {\n    if (data[i] && data[i] !== (news as any)[i]) {\n      changes[i] = data[i];\n    }\n  }\n\n  if (Object.getOwnPropertyNames(changes).length === 0) {\n    return res.status(200).json({\n      message: '什么变化也没有发生',\n      news,\n    });\n  }\n\n  await sequelize.transaction(async transaction => {\n    const changesCopy = { ...changes };\n\n    let newNews = news;\n    if (changes.status) {\n      const beforeStatus = news.status;\n\n      newNews = await news.update({\n        status: changes.status,\n      }, { transaction });\n      await RecordService.create({\n        model: 'News',\n        action: 'updateNewsStatus',\n        before: beforeStatus,\n        data: changes.status,\n        target: news.id,\n        owner: req.session.clientId,\n      }, { transaction });\n\n      const events = await news.$get('events', {\n        where: { status: 'admitted' },\n        attributes: ['id'],\n        transaction,\n      });\n\n      for (const event of events) {\n        const latestNews = (await event.$get('news', {\n          where: { status: 'admitted' },\n          attributes: ['id'],\n          order: [['time', 'DESC']],\n          transaction,\n        }))[0];\n\n        const updateNotification =\n          (latestNews && +latestNews.id === +news.id) ||\n          (changesCopy.status && changesCopy.status !== news.status) ||\n          (changesCopy.time && new Date(changesCopy.time).getTime() !== new Date(news.time).getTime());\n\n        await EventService.updateAdmittedLatestNews(event.id, { transaction });\n\n        if (updateNotification) {\n          NotificationService.updateNewsNotifications(news, {\n            force: data.forceUpdate,\n          });\n        }\n      }\n\n      NotificationService.notifyWhenNewsStatusChanged(news, newNews, req.session.clientId);\n\n      if (beforeStatus === 'admitted' && changes.status !== 'admitted') {\n        const stacks = await news.$get('stacks', {\n          where: { status: 'admitted' },\n        });\n        for (const stack of stacks) {\n          const newsCount = await stack.$count('news', {\n            where: { status: 'admitted' },\n            transaction,\n          });\n          if (!newsCount) {\n            await stack.update({ status: 'invalid' }, { transaction });\n            await RecordService.update({\n              action: 'invalidateStack',\n              data: { status: 'invalid' },\n              before: { status: 'admitted' },\n              model: 'Stack',\n              target: stack.id,\n              owner: req.session.clientId,\n            }, { transaction });\n          }\n        }\n      }\n    }\n\n    delete changes.status;\n    const before: any = {};\n    for (const i of Object.keys(changes)) {\n      before[i] = (newNews as any)[i];\n    }\n\n    if (Object.getOwnPropertyNames(changes).length > 0) {\n      news = await newNews.update(changes, { transaction });\n      await RecordService.update({\n        action: 'updateNewsDetail',\n        data: changes,\n        before,\n        target: news.id,\n        owner: req.session.clientId,\n        model: 'News',\n      }, { transaction });\n    }\n\n    res.status(201).json({\n      message: '修改成功',\n      news,\n    });\n  });\n\n  NewsService.updateAlgoliaIndex({ newsId: id });\n}\n\nexport default updateNews;\n"],"sourceRoot":"../../../../src"}