{"version":3,"sources":["../api/controllers/NewsController/getNews.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAsC;AAEtC,yCAA8D;AAE9D,SAAe,OAAO,CAAC,GAAoB,EAAE,GAAqB;;QAChE,IAAI,EAAE,CAAC;QACP,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YAC7B,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;SACpB;aAAM,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;YACtC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;SACrB;aAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;YAC1B,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;SACtB;QAED,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC;SACJ;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC;YAC9B,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,eAAK;oBACZ,EAAE,EAAE,QAAQ;iBACb,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;SACpD;QACD,MAAM,OAAO,GAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAA,MAAM,gCAAoB,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA,EAAE;gBAC7F,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;aACvD;SACF;QAED,OAAO,CAAC,YAAY,GAAG,MAAM,uBAAW,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;CAAA;AAED,kBAAe,OAAO,CAAC","file":"getNews.js","sourcesContent":["import { News, Stack } from '@Models';\nimport { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { NewsService, AccessControlService } from '@Services';\n\nasync function getNews(req: RedstoneRequest, res: RedstoneResponse) {\n  let id;\n  if (req.body && req.body.news) {\n    id = req.body.news;\n  } else if (req.query && req.query.news) {\n    id = req.query.news;\n  } else if (req.params.news) {\n    id = req.params.news;\n  }\n\n  if (!id) {\n    return res.status(400).json({\n      message: '缺少参数：news。',\n    });\n  }\n\n  const news = await News.findOne({\n    where: { id },\n    include: [{\n      model: Stack,\n      as: 'stacks',\n    }],\n  });\n  if (!news) {\n    return res.status(404).json({ message: '未找到该新闻' });\n  }\n  const newsObj: any = news.get({ plain: true });\n\n  if (news.status !== 'admitted') {\n    if (!req.session.clientId || !await AccessControlService.isClientEditor(req.session.clientId)) {\n      return res.status(404).json({ message: '该新闻尚未通过审核' });\n    }\n  }\n\n  newsObj.contribution = await NewsService.getContribution(news, true);\n  res.status(200).json({ news: newsObj });\n}\n\nexport default getNews;\n"],"sourceRoot":"../../../../src"}