{"version":3,"sources":["../api/controllers/NewsController/getNewsList.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,qCAA+B;AAC/B,yCAA2E;AAE3E,SAAe,WAAW,CAAC,GAAoB,EAAE,GAAqB;;QACpE,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,CAAC;QACV,IAAI,oBAAoB,CAAC;QACzB,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YAC7B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;SACtB;aAAM,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;YACtC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,IAAI,GAAG,CAAC,CAAC;SAClD;QAED,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9B,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;SACxB;aAAM,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;YACvC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;SACzB;QAED,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC7C,oBAAoB,GAAG,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC;SACtD;aAAM,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,oBAAoB,EAAE;YACtD,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC,oBAAoB,CAAC;SACvD;QAED,IAAI,KAAK,EAAE;YACT,IAAI;gBACF,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC3B;YAAC,OAAO,GAAG,EAAE,EAAC,WAAW,EAAC;SAC5B;QAED,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE;YACjC,IAAI,MAAM,gCAAoB,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACnE,SAAS,GAAG,IAAI,CAAC;aAClB;SACF;QAED,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;YACvB,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;SAC3B;QAED,IAAI,KAAK,EAAE;YACT,KAAK,GAAG,uBAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,QAAQ,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC;gBAClC,KAAK;gBACL,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBAC9B,MAAM,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE;gBACvB,KAAK,EAAE,EAAE;aACV,CAAC,CAAC;YAEH,MAAM,uBAAW,CAAC,8BAA8B,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;YAEjF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;SACpC;aAAM;YACL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC;SACJ;IACH,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","file":"getNewsList.js","sourcesContent":["import { RedstoneRequest, RedstoneResponse } from '@Types';\nimport { News } from '@Models';\nimport { UtilService, NewsService, AccessControlService } from '@Services';\n\nasync function getNewsList(req: RedstoneRequest, res: RedstoneResponse) {\n  let page = 1;\n  let where;\n  let withContributionData;\n  let isManager = false;\n\n  if (req.body && req.body.page) {\n    page = req.body.page;\n  } else if (req.query && req.query.page) {\n    page = parseInt(req.query.page as string || '1');\n  }\n\n  if (req.body && req.body.where) {\n    where = req.body.where;\n  } else if (req.query && req.query.where) {\n    where = req.query.where;\n  }\n\n  if (req.body && req.body.withContributionData) {\n    withContributionData = req.body.withContributionData;\n  } else if (req.query && req.query.withContributionData) {\n    withContributionData = req.query.withContributionData;\n  }\n\n  if (where) {\n    try {\n      where = JSON.parse(where);\n    } catch (err) {/* happy */}\n  }\n\n  if (where && req.session.clientId) {\n    if (await AccessControlService.isClientEditor(req.session.clientId)) {\n      isManager = true;\n    }\n  }\n\n  if (where && !isManager) {\n    where.status = 'admitted';\n  }\n\n  if (where) {\n    where = UtilService.convertWhereQuery(where);\n    const newsList = await News.findAll({\n      where,\n      order: [['updatedAt', 'DESC']],\n      offset: (page - 1) * 15,\n      limit: 15,\n    });\n\n    await NewsService.acquireContributionsByNewsList(newsList, withContributionData);\n\n    res.status(200).json({ newsList });\n  } else {\n    res.status(400).json({\n      message: '缺少参数：where',\n    });\n  }\n}\n\nexport default getNewsList;\n"],"sourceRoot":"../../../../src"}