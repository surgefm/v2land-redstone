{"version":3,"sources":["../api/modes/EveryFridayMode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qCAAuC;AACvC,mCAAiE;AACjE,uCAAmC;AACnC,0CAAsD;AACtD,yCAA+B;AAC/B,sEAAqC;AAErC,MAAa,eAAgB,SAAQ,yBAAgB;IAArD;;QACE,SAAI,GAAG,aAAa,CAAC;QACrB,aAAQ,GAAG,SAAS,CAAC;QACrB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,IAAI,CAAC;IAoDpB,CAAC;IAlDO,GAAG;;YACP,MAAM,IAAI,GAAG,IAAA,yBAAM,EAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;YAElD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAE9C,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC;KAAA;IAEK,QAAQ;;YACZ,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,CAAC;KAAA;IAEK,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAyB;;YAC9E,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,EAAE;oBACjB,MAAM,IAAI,8BAAqB,CAAC,cAAc,CAAC,CAAC;iBACjD;gBACD,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;aAChC;YAED,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;oBAC1B,KAAK,EAAE;wBACL,OAAO,EAAE,KAAK,CAAC,EAAE;wBACjB,MAAM,EAAE,UAAU;wBAClB,KAAK,EAAE,EAAE,CAAC,cAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;qBACvB;oBACD,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;iBAC3B,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,GAAG,GAAG,KAAK,CAAC,IAAI,eAAe,CAAC;YAC3C,OAAO,IAAI,KAAK;gBACd,CAAC,CAAC,WAAW,KAAK,CAAC,KAAK,GAAG;gBAC3B,CAAC,CAAC,YAAY,CAAC;YAEjB,OAAO;gBACL,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,cAAc;gBACpC,OAAO;gBACP,MAAM,EAAE,UAAU;gBAClB,GAAG,EAAE,GAAG,kBAAO,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE;aACnC,CAAC;QACJ,CAAC;KAAA;CACF;AAxDD,0CAwDC;AAED,kBAAe,IAAI,eAAe,EAAE,CAAC","file":"EveryFridayMode.js","sourcesContent":["import { Event, Stack } from '@Models';\nimport { NotificationMode, NotificationModeInput } from '@Types';\nimport { globals } from '@Configs';\nimport { MissingParameterError } from '@Utils/errors';\nimport { Op } from 'sequelize';\nimport moment from 'moment-timezone';\n\nexport class EveryFridayMode extends NotificationMode {\n  name = 'EveryFriday';\n  nickname = '每周五定时提醒';\n  needNews = false;\n  isInterval = true;\n\n  async new() {\n    const date = moment(new Date).tz('Asia/Shanghai');\n\n    date.hour(20);\n    date.minute(0);\n    date.second(0);\n    date.date(date.date() + 7 + (5 - date.day()));\n\n    return date.toDate();\n  }\n\n  async notified() {\n    return this.new();\n  }\n\n  async getTemplate({ notification, event, eventId, stack }: NotificationModeInput) {\n    if (!event && !eventId) {\n      if (!notification) {\n        throw new MissingParameterError('notification');\n      }\n      eventId = notification.eventId;\n    }\n\n    if (typeof eventId === 'number') {\n      event = await Event.findByPk(eventId);\n    }\n\n    if (!stack) {\n      stack = await Stack.findOne({\n        where: {\n          eventId: event.id,\n          status: 'admitted',\n          order: { [Op.gte]: 0 },\n        },\n        order: [['order', 'DESC']],\n      });\n    }\n\n    let message = `${event.name} 发来了每周五的定时提醒，`;\n    message += stack\n      ? `它的最新进展为 ${stack.title}。`\n      : '该事件至今尚无进展。';\n\n    return {\n      subject: `${event.name} 发来了每周五的定时提醒`,\n      message,\n      button: '点击按钮查看事件',\n      url: `${globals.site}/${event.id}`,\n    };\n  }\n}\n\nexport default new EveryFridayMode();\n"],"sourceRoot":"../../../src"}