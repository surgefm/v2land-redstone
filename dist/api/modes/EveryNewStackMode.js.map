{"version":3,"sources":["../api/modes/EveryNewStackMode.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAuC;AACvC,mCAAiE;AACjE,uCAAmC;AACnC,0CAAsD;AACtD,yCAA+B;AAE/B,MAAa,iBAAkB,SAAQ,yBAAgB;IAAvD;;QACE,SAAI,GAAG,eAAe,CAAC;QACvB,aAAQ,GAAG,QAAQ,CAAC;QACpB,cAAS,GAAG,IAAI,CAAC;IAwCnB,CAAC;IAtCO,GAAG;;YACP,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEK,QAAQ;;YACZ,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEK,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAyB;;YAC9E,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,EAAE;oBACjB,MAAM,IAAI,8BAAqB,CAAC,cAAc,CAAC,CAAC;iBACjD;gBACD,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;aAChC;YAED,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;oBAC1B,KAAK,EAAE;wBACL,OAAO,EAAE,KAAK,CAAC,EAAE;wBACjB,MAAM,EAAE,UAAU;wBAClB,KAAK,EAAE,EAAE,CAAC,cAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;qBACvB;oBACD,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;iBAC3B,CAAC,CAAC;aACJ;YAED,OAAO;gBACL,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,SAAS;gBAC/B,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,KAAK,GAAG;gBAC9C,MAAM,EAAE,UAAU;gBAClB,GAAG,EAAE,GAAG,kBAAO,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE;aAC/C,CAAC;QACJ,CAAC;KAAA;CACF;AA3CD,8CA2CC;AAED,kBAAe,IAAI,iBAAiB,EAAE,CAAC","file":"EveryNewStackMode.js","sourcesContent":["import { Event, Stack } from '@Models';\nimport { NotificationMode, NotificationModeInput } from '@Types';\nimport { globals } from '@Configs';\nimport { MissingParameterError } from '@Utils/errors';\nimport { Op } from 'sequelize';\n\nexport class EveryNewStackMode extends NotificationMode {\n  name = 'EveryNewStack';\n  nickname = '新的事件进展';\n  needStack = true;\n\n  async new() {\n    return new Date('1/1/2000');\n  }\n\n  async notified() {\n    return new Date('1/1/3000');\n  }\n\n  async getTemplate({ notification, event, eventId, stack }: NotificationModeInput) {\n    if (!event && !eventId) {\n      if (!notification) {\n        throw new MissingParameterError('notification');\n      }\n      eventId = notification.eventId;\n    }\n\n    if (typeof eventId === 'number') {\n      event = await Event.findByPk(eventId);\n    }\n\n    if (!stack) {\n      stack = await Stack.findOne({\n        where: {\n          eventId: event.id,\n          status: 'admitted',\n          order: { [Op.gte]: 0 },\n        },\n        order: [['order', 'DESC']],\n      });\n    }\n\n    return {\n      subject: `${event.name} 有了新的进展`,\n      message: `${event.name} 最新进展：「${stack.title}」`,\n      button: '点击按钮查看进展',\n      url: `${globals.site}/${event.id}/${stack.id}`,\n    };\n  }\n}\n\nexport default new EveryNewStackMode();\n"],"sourceRoot":"../../../src"}