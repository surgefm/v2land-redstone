{"version":3,"sources":["../api/responses/errorHandler.ts"],"names":[],"mappings":";;AAAA,mCAGgB;AAChB,+BAAsC;AAGtC,SAAS,YAAY,CAAC,GAAU,EAAE,GAAoB,EAAE,GAAqB,EAAE,IAAkB;IAC/F,IAAI,CAAC,GAAG,IAAI,GAAG,YAAY,qBAAc;QAAE,OAAO,IAAI,EAAE,CAAC;IACzD,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAExC,IAAI,GAAG,CAAC,IAAI,KAAK,0BAA0B,EAAE;QAC3C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,8BAAqB;YAC5B,OAAO,EAAG,GAAuB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;SACvE,CAAC,CAAC;QACH,OAAO,IAAI,EAAE,CAAC;KACf;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,gCAAuB,EAAE;QAC/C,MAAM,WAAW,GAAG,GAAoB,CAAC;QACzC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YACtC,KAAK,EAAE,WAAW,CAAC,SAAS;YAC5B,OAAO,EAAE,WAAW,CAAC,OAAO;SAC7B,CAAC,CAAC;QACH,OAAO,IAAI,EAAE,CAAC;KACf;IAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnB,OAAO,EAAE,GAAG,CAAC,OAAO;KACrB,CAAC,CAAC;IACH,IAAI,EAAE,CAAC;AACT,CAAC;AAED,kBAAe,YAAY,CAAC","file":"errorHandler.js","sourcesContent":["import {\n  RedstoneRequest, RedstoneResponse, NextFunction,\n  RedstoneError, RedstoneErrorIdentifier, InvalidInputErrorType,\n} from '@Types';\nimport { ServerResponse } from 'http';\nimport { ValidationError } from 'sequelize';\n\nfunction errorHandler(err: Error, req: RedstoneRequest, res: RedstoneResponse, next: NextFunction) {\n  if (!err || err instanceof ServerResponse) return next();\n  (req.log || console).error(err.message);\n\n  if (err.name === 'SequelizeValidationError') {\n    res.status(400).json({\n      error: InvalidInputErrorType,\n      message: (err as ValidationError).errors.map(e => e.message).join('ï¼›'),\n    });\n    return next();\n  } else if (err.name === RedstoneErrorIdentifier) {\n    const redstoneErr = err as RedstoneError;\n    res.status(redstoneErr.statusCode).json({\n      error: redstoneErr.errorType,\n      message: redstoneErr.message,\n    });\n    return next();\n  }\n\n  res.status(400).json({\n    message: err.message,\n  });\n  next();\n}\n\nexport default errorHandler;\n"],"sourceRoot":"../../../src"}