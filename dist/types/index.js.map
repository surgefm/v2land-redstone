{"version":3,"sources":["../types/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,uDAA0D;AAkFxD,mGAlFO,iCAAkB,OAkFP;AAjFpB,yDAA6E;AA6E3E,iGA7EO,mCAAgB,OA6EP;AA5ElB,iEAGyB;AA+EvB,wBAlFK,uBAAa,CAkFL;AACb,wGAlFA,uCAAuB,OAkFA;AACvB,sGAlFA,qCAAqB,OAkFA;AACrB,0GAnFuB,yCAAyB,OAmFvB","file":"index.js","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { Logger } from 'pino';\nimport { Client, Record as RecordModel, News, HeaderImage, Tag, EventContributor } from '@Models';\nimport { ResourceLockStatus } from '@Models/ResourceLock';\nimport { NotificationMode, NotificationModeInput } from './NotificationMode';\nimport RedstoneError, {\n  RedstoneErrorIdentifier,\n  InvalidInputErrorType, ResourceNotFoundErrorType,\n} from './RedstoneError';\n\nexport { SanitizedClient } from '@Services/ClientService/sanitizeClient';\n\ninterface RedstoneRequest extends Request {\n  sessionID: string;\n  currentClient?: Client;\n  log: Logger;\n}\n\ntype RedstoneResponse = Response\ntype ControllerAction = (req: RedstoneRequest, res: RedstoneResponse) => Promise<any>;\n\ninterface StringIndexInterface {\n  [index: string]: any;\n}\n\ninterface SimplifiedEventInterface extends StringIndexInterface {\n  id?: number;\n  headerImage?: { id?: number } | HeaderImage;\n  contribution?: RecordModel[];\n}\n\ninterface StackObj {\n  id?: number;\n  title?: string;\n  description?: string;\n  newsCount?: number;\n  status?: string;\n  news?: News[];\n  order?: number;\n  time?: Date;\n  contribution?: RecordModel[];\n  enableNotification?: boolean;\n  eventId?: number;\n  event?: EventObj;\n  stackEventId?: number;\n  stackEvent?: EventObj;\n}\n\ninterface EventObj extends SimplifiedEventInterface {\n  name: string;\n  description?: string;\n  status?: string;\n  stacks: StackObj[];\n  tags?: Tag[];\n  newsCount?: number;\n  stackCount?: number;\n  starCount?: number;\n  temporaryStack?: News[];\n  contributors?: EventContributor[];\n  needContributor?: boolean;\n  lastUpdate?: Date;\n  get?: Function;\n}\n\ninterface ResourceLockObj {\n  locker: number;\n  eventId: number;\n  model?: string;\n  resourceId?: number;\n}\n\nexport {\n  RedstoneRequest,\n  RedstoneResponse,\n  NextFunction,\n  ControllerAction,\n\n  SimplifiedEventInterface,\n  EventObj,\n  StackObj,\n\n  NotificationMode,\n  NotificationModeInput,\n\n  ResourceLockObj,\n  ResourceLockStatus,\n\n  RedstoneError,\n  RedstoneErrorIdentifier,\n  InvalidInputErrorType,\n  ResourceNotFoundErrorType,\n};\n\ndeclare module 'express-session' {\n  interface SessionData {\n    clientId: number;\n    authenticated: boolean;\n  }\n}\n"],"sourceRoot":"../../src"}