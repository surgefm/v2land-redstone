{"version":3,"sources":["../gulpfile.js"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;AAClC,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC9C,MAAM,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACtC,MAAM,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAE9C,MAAM,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;AACpD,MAAM,cAAc,GAAG,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE;IACvD,eAAe,EAAE,IAAI;CACtB,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,UAAS,EAAE;IAC/C,SAAS,CAAC,GAAG,EAAE;SACZ,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACvB,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE;QAC1B,cAAc,EAAE,IAAI;QACpB,UAAU,EAAE,QAAQ;KACrB,CAAC,CAAC;SACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAS,EAAE;IAC7C,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;SACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAChC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC,CAAC;AAEnF,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,UAAS,EAAE;IAClC,SAAS,CAAC,GAAG,EAAE;SACZ,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE;QAC1B,cAAc,EAAE,IAAI;QACpB,UAAU,EAAE,QAAQ;KACrB,CAAC,CAAC;SACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE;IACzC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;IACzC,IAAI;SACD,KAAK,CAAC,CAAC,SAAS,EAAE,oBAAoB,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;SACxD,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;SACnD,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC","file":"gulpfile.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\nconst gulp = require('gulp');\nconst { series, parallel } = gulp;\nconst server = require('gulp-develop-server');\nconst ts = require('gulp-typescript');\nconst sourcemaps = require('gulp-sourcemaps');\n\nconst tsProject = ts.createProject('tsconfig.json');\nconst tsProjectQuick = ts.createProject('tsconfig.json', {\n  isolatedModules: true,\n});\n\ngulp.task('build/compile TypeScript', function(cb) {\n  tsProject.src()\n    .pipe(sourcemaps.init())\n    .pipe(tsProject())\n    .pipe(sourcemaps.write('.', {\n      includeContent: true,\n      sourceRoot: '../src',\n    }))\n    .pipe(gulp.dest('dist'))\n    .on('end', cb);\n});\n\ngulp.task('build/copy static file', function(cb) {\n  gulp.src('./assets/**/*')\n    .pipe(gulp.dest('./dist/assets'))\n    .on('end', cb);\n});\n\ngulp.task('build', parallel('build/compile TypeScript', 'build/copy static file'));\n\ngulp.task('quick build', function(cb) {\n  tsProject.src()\n    .pipe(sourcemaps.init())\n    .pipe(tsProjectQuick())\n    .pipe(sourcemaps.write('.', {\n      includeContent: true,\n      sourceRoot: '../src',\n    }))\n    .pipe(gulp.dest('dist'))\n    .on('end', cb);\n});\n\ngulp.task('server', series('build', (cb) => {\n  server.listen({ path: 'dist/app.js' }, cb);\n}));\n\ngulp.task('watch', series('server', (cb) => {\n  gulp\n    .watch(['**/*.ts', '!node_modules/**/*'], { delay: 200 })\n    .on('change', series('quick build', server.restart))\n    .on('end', cb);\n}));\n\ngulp.task('default', series('server', 'watch'));\n"],"sourceRoot":"../src"}