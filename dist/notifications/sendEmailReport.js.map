{"version":3,"sources":["../notifications/sendEmailReport.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;GAEG;AACH,qCAAqD;AACrD,yCAAqE;AAErE,oEAA4C;AAE5C,SAAe,eAAe,CAAC,MAAc,EAAE,EAAE,WAAW,EAAgC;;QAC1F,MAAM,UAAU,GAAG,MAAM,IAAA,uBAAa,EAAC,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QAEhE,MAAM,MAAM,GAAgC;YAC1C,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;SACd,CAAC;QAEF,MAAM,KAAK,GAAG;YACZ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,OAAO,EAAE,qBAAqB;aAC/B;YACD,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK;YAC3B,OAAO,EAAE,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;YACtE,QAAQ,EAAE,gBAAgB,MAAM,CAAC,IAAI,EAAE;YACvC,OAAO,EAAE,UAAU;SACpB,CAAC;QAEF,MAAM,wBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/B,MAAM,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QAC7D,MAAM,4BAAkB,CAAC,MAAM,CAC7B,EAAE,MAAM,EAAE,UAAU,EAAE,EACtB;YACE,KAAK,EAAE;gBACL,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,MAAM,EAAE,SAAS;aAClB;YACD,WAAW;SACZ,CACF,CAAC;QAEF,OAAO,yBAAa,CAAC,MAAM,CAAC;YAC1B,KAAK,EAAE,QAAQ;YACf,MAAM,EAAE,uBAAW,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC/C,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,MAAM,EAAE,MAAM,CAAC,EAAE;SAClB,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC;CAAA;AAED,kBAAe,eAAe,CAAC","file":"sendEmailReport.js","sourcesContent":["/**\n * 正式发送邮件简讯（每日简讯/周报悉可）\n */\nimport { Report, ReportNotification } from '@Models';\nimport { EmailService, RecordService, ModeService } from '@Services';\nimport { Transaction } from 'sequelize';\nimport getReportData from './getReportData';\n\nasync function sendEmailReport(report: Report, { transaction }: { transaction: Transaction }) {\n  const reportData = await getReportData(report, { transaction });\n\n  const titles: { [index: string]: string } = {\n    daily: '日报',\n    weekly: '周报',\n    monthly: '月报',\n  };\n\n  const email = {\n    from: {\n      name: '浪潮 V2Land',\n      address: 'notify@langchao.org',\n    },\n    to: reportData.client.email,\n    subject: `你的浪潮${titles[report.type] || '汇报'} - ${reportData.date.str}`,\n    template: `email-report-${report.type}`,\n    context: reportData,\n  };\n\n  await EmailService.send(email);\n\n  await report.update({ status: 'complete' }, { transaction });\n  await ReportNotification.update(\n    { status: 'complete' },\n    {\n      where: {\n        reportId: report.id,\n        status: 'pending',\n      },\n      transaction,\n    },\n  );\n\n  return RecordService.create({\n    model: 'Report',\n    action: ModeService.getRecordActionName(report),\n    owner: report.owner,\n    target: report.id,\n  }, { transaction });\n}\n\nexport default sendEmailReport;\n"],"sourceRoot":"../../src"}