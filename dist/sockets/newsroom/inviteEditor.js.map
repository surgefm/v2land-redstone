{"version":3,"sources":["../sockets/newsroom/inviteEditor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,qCAAwC;AACxC,yCAAiD;AACjD,gEAAwC;AAExC,SAAwB,YAAY,CAAC,MAAc;IACjD,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,CAAO,OAAe,EAAE,QAAgB,EAAE,KAAe,GAAG,EAAE,GAAE,CAAC,EAAE,EAAE;QAC9F,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QACpD,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,sBAAsB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU;YAAE,OAAO,EAAE,CAAC,2CAA2C,CAAC,CAAC;QACxE,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,gBAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC,kBAAkB,CAAC,CAAC;QAC3C,MAAM,gCAAoB,CAAC,sBAAsB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrE,MAAM,CAAC,EAAE,CAAC,IAAA,qBAAW,EAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1E,EAAE,EAAE,CAAC;IACP,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AAbD,+BAaC","file":"inviteEditor.js","sourcesContent":["import { Socket } from 'socket.io';\nimport { Event, Client } from '@Models';\nimport { AccessControlService } from '@Services';\nimport getRoomName from './getRoomName';\n\nexport default function inviteEditor(socket: Socket) {\n  socket.on('invite editor', async (eventId: number, clientId: number, cb: Function = () => {}) => {\n    const managerId = socket.handshake.session.clientId;\n    const haveAccess = await AccessControlService.isAllowedToManageEvent(managerId, eventId);\n    if (!haveAccess) return cb('You are not allowed to manage this event.');\n    const event = await Event.findByPk(eventId);\n    if (!event) return cb('Event not found');\n    const client = await Client.findByPk(clientId);\n    if (!client) return cb('Client not found');\n    await AccessControlService.allowClientToEditEvent(clientId, eventId);\n    socket.in(getRoomName(eventId)).emit('add editor', { eventId, clientId });\n    cb();\n  });\n}\n"],"sourceRoot":"../../../src"}