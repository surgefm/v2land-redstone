{"version":3,"sources":["../sockets/newsroom/lockResource.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,yCAAsE;AAEtE,gEAAwC;AAExC,SAAwB,YAAY,CAAC,MAAc;IACjD,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,CAAO,OAAe,EAAE,KAAa,EAAE,UAAkB,EAAE,KAAe,GAAG,EAAE,GAAE,CAAC,EAAE,EAAE;QAC/G,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC9C,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI,CAAC,UAAU;YAAE,OAAO,EAAE,CAAC,yCAAyC,CAAC,CAAC;QACtE,MAAM,MAAM,GAAG,MAAM,+BAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,EAAE,CAAC,sCAAsC,CAAC,CAAC;SACnD;QAED,MAAM,CAAC,EAAE,CAAC,IAAA,qBAAW,EAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE;YACpD,OAAO;YACP,KAAK;YACL,UAAU;YACV,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;QACH,EAAE,EAAE,CAAC;IACP,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AAlBD,+BAkBC","file":"lockResource.js","sourcesContent":["import { Socket } from 'socket.io';\nimport { ResourceLockService, AccessControlService } from '@Services';\n\nimport getRoomName from './getRoomName';\n\nexport default function lockResource(socket: Socket) {\n  socket.on('lock resource', async (eventId: number, model: string, resourceId: number, cb: Function = () => {}) => {\n    const { clientId } = socket.handshake.session;\n    const haveAccess = await AccessControlService.isAllowedToEditEvent(clientId, eventId);\n    if (!haveAccess) return cb('You are not allowed to edit this event.');\n    const locked = await ResourceLockService.lock(model, resourceId, clientId, eventId);\n    if (!locked) {\n      return cb('The resource has already been locked');\n    }\n\n    socket.in(getRoomName(eventId)).emit('lock resource', {\n      eventId,\n      model,\n      resourceId,\n      locker: clientId,\n    });\n    cb();\n  });\n}\n"],"sourceRoot":"../../../src"}