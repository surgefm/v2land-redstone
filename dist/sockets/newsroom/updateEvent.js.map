{"version":3,"sources":["../sockets/newsroom/updateEvent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,qCAAiC;AACjC,yCAA+D;AAE/D,gEAAwC;AAExC,SAAwB,WAAW,CAAC,MAAc;IAChD,MAAM,CAAC,EAAE,CAAC,0BAA0B,EAAE,CAAO,OAAe,EAAE,IAAc,EAAE,KAAe,GAAG,EAAE,GAAE,CAAC,EAAE,EAAE;QACvG,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC9C,MAAM,UAAU,GAAG,MAAM,gCAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI,CAAC,UAAU;YAAE,OAAO,EAAE,CAAC,yCAAyC,CAAC,CAAC;QAEtE,MAAM,KAAK,GAAG,MAAM,wBAAY,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC,iBAAiB,CAAC,CAAC;QAEzC,IAAI;YACF,MAAM,CAAC,GAAG,MAAM,wBAAY,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,gBAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvF,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,MAAM,CAAC,EAAE,CAAC,IAAA,qBAAW,EAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;aACzH;YACD,EAAE,EAAE,CAAC;SACN;QAAC,OAAO,GAAG,EAAE;YACZ,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACjB;IACH,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AApBD,8BAoBC","file":"updateEvent.js","sourcesContent":["import { Socket } from 'socket.io';\nimport { EventObj } from '@Types';\nimport { Client } from '@Models';\nimport { EventService, AccessControlService } from '@Services';\n\nimport getRoomName from './getRoomName';\n\nexport default function updateEvent(socket: Socket) {\n  socket.on('update event information', async (eventId: number, data: EventObj, cb: Function = () => {}) => {\n    const { clientId } = socket.handshake.session;\n    const haveAccess = await AccessControlService.isAllowedToEditEvent(clientId, eventId);\n    if (!haveAccess) return cb('You are not allowed to edit this event.');\n\n    const event = await EventService.findEvent(eventId, { eventOnly: true });\n    if (!event) return cb('Event not found');\n\n    try {\n      const e = await EventService.updateEvent(event, data, await Client.findByPk(clientId));\n      const { id, name, description, needContributor } = e;\n      if (e !== null) {\n        socket.to(getRoomName(eventId)).emit('update event information', { event: { id, name, description, needContributor } });\n      }\n      cb();\n    } catch (err) {\n      cb(err.message);\n    }\n  });\n}\n"],"sourceRoot":"../../../src"}