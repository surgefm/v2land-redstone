{"version":3,"sources":["../sockets/newsroom/inviteManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,qCAAwC;AACxC,yCAAiD;AACjD,0EAAoE;AACpE,gEAAwC;AAExC,SAAwB,aAAa,CAAC,MAAc;IAClD,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAO,OAAe,EAAE,QAAgB,EAAE,KAAe,GAAG,EAAE,GAAE,CAAC,EAAE,EAAE;QAC/F,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QAClD,MAAM,UAAU,GAAG,MAAM,IAAA,oBAAO,EAAC,OAAO,EAAE,gCAAoB,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,UAAU;YAAE,OAAO,EAAE,CAAC,uDAAuD,CAAC,CAAC;QACpF,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,gBAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC,kBAAkB,CAAC,CAAC;QAC3C,MAAM,gCAAoB,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACvE,MAAM,CAAC,EAAE,CAAC,IAAA,qBAAW,EAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC3E,EAAE,EAAE,CAAC;IACP,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AAbD,gCAaC","file":"inviteManager.js","sourcesContent":["import { Socket } from 'socket.io';\nimport { Event, Client } from '@Models';\nimport { AccessControlService } from '@Services';\nimport { hasRole } from '@Services/AccessControlService/operations';\nimport getRoomName from './getRoomName';\n\nexport default function inviteManager(socket: Socket) {\n  socket.on('invite manager', async (eventId: number, clientId: number, cb: Function = () => {}) => {\n    const ownerId = socket.handshake.session.clientId;\n    const haveAccess = await hasRole(ownerId, AccessControlService.getEventOwnerRolePlain(eventId));\n    if (!haveAccess) return cb('You are not allowed to invate managers to this event.');\n    const event = await Event.findByPk(eventId);\n    if (!event) return cb('Event not found');\n    const client = await Client.findByPk(clientId);\n    if (!client) return cb('Client not found');\n    await AccessControlService.allowClientToManageEvent(clientId, eventId);\n    socket.in(getRoomName(eventId)).emit('add manager', { eventId, clientId });\n    cb();\n  });\n}\n"],"sourceRoot":"../../../src"}