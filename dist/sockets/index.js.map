{"version":3,"sources":["../sockets/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,4DAAyD;AACzD,sDAA4B;AAE5B,sDAAkD;AAClD,yDAA4D;AAE5D,0DAAsC;AACtC,0DAAsC;AAItC,SAAsB,UAAU,CAAC,EAAW;;QAC1C,IAAI,cAAM;YAAE,OAAO,cAAM,CAAC;QAE1B,IAAI,oBAAK,EAAE;YACT,MAAM,SAAS,GAAG,IAAI,iBAAK,CAAC,0BAAW,CAAC,CAAC;YACzC,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,cAAc,CAAC;YAC9G,EAAE,CAAC,OAAO,CAAC,IAAA,6BAAa,EAAC,SAAS,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;SAC1D;QAED,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,CAAO,MAAM,EAAE,EAAE;YACnC,EAAE,CAAC,GAAG,CAAC,wBAAU,CAAC,CAAC;YAEnB,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE;gBACtB,EAAE,CAAC,IAAI,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACL,CAAC,CAAA,CAAC,CAAC;QAEH,IAAA,kBAAY,EAAC,EAAE,CAAC,CAAC;QACjB,IAAA,kBAAY,EAAC,EAAE,CAAC,CAAC;QACjB,cAAM,GAAG,EAAE,CAAC;IACd,CAAC;CAAA;AArBD,gCAqBC","file":"index.js","sourcesContent":["import { Server } from 'socket.io';\nimport { createAdapter } from '@socket.io/redis-adapter';\nimport Redis from 'ioredis';\n\nimport { isLoggedIn } from '@Sockets/middlewares';\nimport { redis, redisConfig } from '@Services/RedisService';\n\nimport loadChatroom from './chatroom';\nimport loadNewsroom from './newsroom';\n\nexport let socket: Server;\n\nexport async function loadSocket(io?: Server) {\n  if (socket) return socket;\n\n  if (redis) {\n    const pubClient = new Redis(redisConfig);\n    const subClient = pubClient.duplicate();\n    const key = process.env.NODE_ENV === 'production' ? 'surgefm-prod-' : process.env.REDIS_KEY || 'surgefm-dev-';\n    io.adapter(createAdapter(pubClient, subClient, { key }));\n  }\n\n  io.on('connection', async (socket) => {\n    io.use(isLoggedIn);\n\n    socket.on('hey', (cb) => {\n      cb('ðŸŒŠ');\n    });\n  });\n\n  loadChatroom(io);\n  loadNewsroom(io);\n  socket = io;\n}\n"],"sourceRoot":"../../src"}