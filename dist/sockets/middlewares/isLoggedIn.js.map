{"version":3,"sources":["../sockets/middlewares/isLoggedIn.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,sEAAsC;AACtC,qEAAuD;AACvD,8CAA+D;AAE/D,MAAM,IAAI,GAAG,IAAA,yBAAO,kCACf,uBAAa,KAChB,KAAK,EAAE,IAAA,sBAAY,GAAE,IACrB,CAAC;AAEH,SAA8B,UAAU,CAAC,MAAc,EAAE,IAA2B;;QAClF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YAChE,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC5B,4DAA4D;gBAC5D,aAAa;gBACb,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE;YACnE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACrC;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC9C,MAAM,YAAY,CAAC,GAAG,CAAC,UAAU,MAAM,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QACxD,IAAI,EAAE,CAAC;IACT,CAAC;CAAA;AAhBD,6BAgBC","file":"isLoggedIn.js","sourcesContent":["import { Socket } from 'socket.io';\nimport session from 'express-session';\nimport * as RedisService from '@Services/RedisService';\nimport { sessionConfig, sessionStore } from '@Configs/session';\n\nconst sess = session({\n  ...sessionConfig,\n  store: sessionStore(),\n});\n\nexport default async function isLoggedIn(socket: Socket, next: ( err?: any ) => void) {\n  if (!socket.handshake.session && socket.handshake.headers.cookie) {\n    await new Promise((resolve) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      sess(socket.handshake, { end: () => null }, resolve);\n    });\n  }\n\n  if (!socket.handshake.session || !socket.handshake.session.clientId) {\n    return next('Please sign in first');\n  }\n\n  const { clientId } = socket.handshake.session;\n  await RedisService.set(`socket:${socket.id}`, clientId);\n  next();\n}\n"],"sourceRoot":"../../../src"}