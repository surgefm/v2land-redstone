{"version":3,"sources":["../app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uCAAqC;AACrC,iCAA+B;AAC/B,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,sDAA2C;AAC3C,gDAAwB;AACxB,yCAA+C;AAC/C,kEAAyC;AACzC,8DAAqC;AACrC,8DAAsC;AACtC,8EAAuC;AACvC,kEAAoC;AACpC,gDAAwB;AAExB,sEAAsC;AACtC,8CAA+D;AAC/D,yDAAiC;AACjC,gDAAwB;AACxB,iEAA+C;AAE/C,8DAAsC;AACtC,oEAA4C;AAC5C,2FAAgE;AAChE,uCAAuC;AACvC,2CAA0C;AAE1C,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AA+Cb,kBAAG;AA9CZ,MAAM,MAAM,GAAG,cAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACtC,MAAM,MAAM,GAAG,IAAI,kBAAQ,CAAC,MAAM,EAAE;IAClC,IAAI,EAAE,kBAAc,CAAC,IAAI;IACzB,MAAM,EAAE;QACN,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE,KAAK;KAChB;CACF,CAAC,CAAC;AAuCW,wBAAM;AArCpB,SAAsB,UAAU,CAAC,GAAY;;QAC3C,MAAM,IAAA,uBAAa,GAAE,CAAC;QAEtB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;YACzC,GAAG,CAAC,GAAG,CAAC,IAAA,6BAAI,GAAE,CAAC,CAAC;SACjB;QACD,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;QACxB,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAO,EAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAC7D,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,kBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAC3B,GAAG,CAAC,GAAG,CAAC,IAAA,qBAAW,GAAE,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,IAAA,yBAAO,kCACf,uBAAa,KAChB,KAAK,EAAE,IAAA,sBAAY,GAAE,IACrB,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACd,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;QAC9C,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAA,oBAAU,EAAC,GAAG,CAAC,CAAC;QAChB,MAAM,IAAA,oBAAO,GAAE,CAAC;QAEhB,GAAG,CAAC,GAAG,CAAC,yBAAY,CAAC,CAAC;QAEtB,MAAM,IAAA,oBAAU,EAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAAA;AA/BD,gCA+BC;AAED,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;IACnC,UAAU,CAAC,GAAG,CAAC,CAAC;CACjB;AAGD,kBAAe,GAAG,CAAC","file":"app.js","sourcesContent":["import 'source-map-support/register';\nimport 'module-alias/register';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nimport express, { Express } from 'express';\nimport Http from 'http';\nimport { Server as SocketIO } from 'socket.io';\nimport responseTime from 'response-time';\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport pino from 'express-pino-logger';\nimport favicon from 'serve-favicon';\nimport path from 'path';\n\nimport session from 'express-session';\nimport { sessionConfig, sessionStore } from '@Configs/session';\nimport http from '@Configs/http';\nimport cors from 'cors';\nimport securityConfig from '@Configs/security';\n\nimport loadRoutes from './loadRoutes';\nimport loadSequelize from './loadSequelize';\nimport loadAcl from '@Services/AccessControlService/initialize';\nimport { loadSocket } from './sockets';\nimport { errorHandler } from '@Responses';\n\nconst app = express();\nconst server = Http.createServer(app);\nconst socket = new SocketIO(server, {\n  cors: securityConfig.cors,\n  cookie: {\n    name: 'redstone.sid',\n    httpOnly: false,\n  },\n});\n\nexport async function liftServer(app: Express) {\n  await loadSequelize();\n\n  if (process.env.NODE_ENV === 'production') {\n    app.use(pino());\n  }\n  app.use(responseTime());\n  app.use(favicon(path.join(__dirname, 'assets/favicon.ico')));\n  app.use(cors(securityConfig.cors));\n  app.use(bodyParser.json());\n  app.use(compression());\n  const sess = session({\n    ...sessionConfig,\n    store: sessionStore(),\n  });\n  app.use(sess);\n  app.use(http.middleware.bearerAuthentication);\n  app.use(http.middleware.noCache);\n\n  loadRoutes(app);\n  await loadAcl();\n\n  app.use(errorHandler);\n\n  await loadSocket(socket);\n\n  if (process.env.NODE_ENV !== 'test') {\n    server.listen(1337, () => {\n      console.log('V2land Redstone started');\n    });\n  }\n}\n\nif (process.env.NODE_ENV !== 'test') {\n  liftServer(app);\n}\n\nexport { app, socket };\nexport default app;\n"],"sourceRoot":"../src"}